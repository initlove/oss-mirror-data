{
  "node_id": "MDM6VGFnMTE0NzY5ODplZmQ5ODVkODk4NjA4OWJiYTQxNGZmODk0YTc4OTliNmM1YzJmYmNi",
  "sha": "efd985d8986089bba414ff894a7899b6c5c2fbcb",
  "url": "https://api.github.com/repos/proot-me/proot/git/tags/efd985d8986089bba414ff894a7899b6c5c2fbcb",
  "tagger": {
    "name": "Cédric VINCENT",
    "email": "cedric.vincent@st.com",
    "date": "2014-07-02T12:38:30Z"
  },
  "object": {
    "sha": "437b4880cc0181c5b9841b253ff94e7072adf35e",
    "type": "commit",
    "url": "https://api.github.com/repos/proot-me/proot/git/commits/437b4880cc0181c5b9841b253ff94e7072adf35e"
  },
  "tag": "v4.0.0",
  "message": "Release v4.0.0\n==============\n\nHighlights\n----------\n\n+ It is now possible to use GDB, Strace, or any other program based on\n  \"ptrace\" under PRoot.  This was not the case previously because it\n  is not possible to stack ptracers on Linux, so an emulation layer\n  was developed in order to bypass this limitation.  This has required\n  a lot of changes in PRoot, hence the major number version bumping.\n  It was mostly tested on x86_64, and partially tested on x86 and ARM.\n  This ptrace emulation support is still experimental, and there are a\n  couple of known issues, but feel free to report unexpected behaviors\n  if you need a fix.\n\n+ A new command-line option is available: \"-S\".  It is similar to the\n  \"-R\" option expect it enables the \"-0\" option and binds only a\n  minimal set of paths that are known to not be updated by package\n  installations, to avoid unexpected changes on host files.  This\n  option is useful to safely create and install packages into the\n  guest rootfs.  For example:\n\n      $ proot -S ubuntu-14.04-rootfs/ apt-get install samba\n\n  or:\n\n      $ proot -S ubuntu-14.04-rootfs/\n      # apt-get install samba\n\n  If \"-0 -R\" is used instead of \"-S\", the same command fails since it\n  tries to update \"/etc/group\", which is bound to the host system and\n  is not writable (assuming PRoot is ran without privileges):\n\n      $ proot -0 -R ubuntu-14.04-rootfs/\n      # apt-get install samba\n      [...]\n      Adding group `sambashare' (GID 105) ...\n      Permission denied\n\n+ The fake_id0 extension can now fake any user and group identifiers.\n  That means, when \"-0\" is specified, PRoot-ed processes can change\n  their real, effective and saved identifiers, with respect to the\n  rules described in setuid, setfsuid, setreuid, setresuid, and\n  setfsuid manuals.  Also, the new command-line option \"-i\" was added\n  to change explicitly the identifiers to the specified values.  This\n  option will be used by CARE to re-execute with the same initial\n  identifiers, but it could also be useful to threaten your teammates\n  ;).  Note that the \"-0\" option is actually the same as \"-i 0:0\".\n\n+ The old command-line interface is not supported anymore.  That means\n  it is now impossible to specify the path to the guest rootfs without\n  using -r or -R.  Also, -Q and -B options are definitively gone,\n  instead the -R option must be specified, respectively with and\n  without -q.  See PRoot v3.1 release notes for details.\n\nFixes\n-----\n\n+ getcwd(2) and chdir(2) now return the correct error code when,\n  respectively, the current directory does not exist anymore and the\n  target directory doesn't have the \"search\" permission.\n\n+ Named file descriptors (ie. links in /proc/<pid>/fd/*) are not\n  dereferenced anymore since they may point to special objects like\n  pipes, sockets, inodes, ...  Such objects do not exist on the\n  file-system name-space, so dereferencing them used to cause\n  unexpected errors.\n\n+ Extensions now see every component of canonicalized paths.  An\n  optimization in the canonicalization loop used to skip the first\n  part of a path if it was known to be already canonicalized, sadly\n  this short-cut may confuse some extensions, like -0.\n\n+ Temporary files and directories created by PRoot for its own purpose\n  are now automatically deleted when PRoot exits.\n\nMiscellaneous\n-------------\n\n+ PRoot does not rely on GCC C extensions anymore, like nested\n  functions.  That means its stack does not have to be executable\n  (this is required for hardened Linux systems), and it can now be\n  compiled with Clang.\n\n+ The ASLR (Address Space Layout Randomization) is not disabled\n  anymore, and the heap is now emulated on all architectures.\n\nInternal changes\n----------------\n\nThis section is dedicated to developers.\n\n+ PRoot now remembers the parent of all tracees, it is similar to a\n  traced process tree.  This was required for the ptrace emulation\n  support, but this could be useful to some extensions.\n\n+ It is now possible to restart a tracee with any ptrace restart mode:\n  single-step, single-block, ...\n\n+ Functions {peek,poke}_mem were replaced with functions\n  {peek,poke}_{,u}int{8,16,32,64}.  These new functions performs type\n  conversion and fetch only the necessary amount of data in target\n  tracee's memory to avoid invalid accesses.\n\n+ There is a new interface to handle ELF auxiliary vectors.  See\n  ptrace emulation, kompat and fake_id0 extensions for usage examples.\n\n+ There is a new interface to create temporary files and directories\n  that are automatically deleted on exit.  See CARE extension, glue\n  and auxv support for usage examples.\n\n+ When built with GCC function instrumentation support, PRoot prints\n  the currently called function on standard error stream (stderr).\n\nThanks\n------\n\nThanks go to Stephen McCamant, Oren Tirosh, Jérôme Audu, and Carlos\nHernan Prada Rojas for their bug reports and tests; and to Rémi\nDuraffort for his contributions.\n\nValidation\n----------\n\n====================  =================  ==============  =================  =========\ntestsuite                   host distro    guest distro     configurations   comments\n====================  =================  ==============  =================  =========\nproot-v4.0                 OBS */x86_64            none                N/A          a\nproot-v4.0                    OBS */x86            none                N/A          b\nproot-v4.0             Ubuntu-10.10/arm            none                N/A          a\n\nproot-v4.0            Slack-14.1/x86_64            none                N/A          a\nproot-v4.0/memcheck   Slack-14.1/x86_64            none                N/A          a\nproot-v4.0/asan       Slack-14.1/x86_64            none                N/A          a\nproot-v4.0/talleak    Slack-14.1/x86_64            none                N/A          a\n\nproot-v4.0            Slack-14.1/x86_64            none         no-seccomp          a\nproot-v4.0/memcheck   Slack-14.1/x86_64            none         no-seccomp          a\nproot-v4.0/asan       Slack-14.1/x86_64            none         no-seccomp          a\nproot-v4.0/talleak    Slack-14.1/x86_64            none         no-seccomp          a\n\nlibuv-0.10.27         Slack-14.1/x86_64    same as host               none          a\nlibuv-0.10.27         Slack-14.1/x86_64    same as host   kompat, fake_id0          c\nlibuv-0.10.27         Slack-14.1/x86_64  Slack-14.0/x86               none          a\nlibuv-0.10.27         Slack-14.1/x86_64  Slack-14.0/x86   kompat, fake_id0          c\n\nltp-syscall-20130904  Slack-14.1/x86_64    same as host               none          d\nltp-syscall-20130904  Slack-14.1/x86_64    same as host   kompat, fake_id0        d,e\nltp-syscall-20130904  Slack-14.1/x86_64  Slack-14.0/x86               none        d,f\nltp-syscall-20130904  Slack-14.1/x86_64  Slack-14.0/x86   kompat, fake_id0      d,e,f\n\nltp-opt-20130904      Slack-14.1/x86_64    same as host               none          g\nltp-opt-20130904      Slack-14.1/x86_64    same as host   kompat, fake_id0        g,h\nltp-opt-20130904      Slack-14.1/x86_64  Slack-14.0/x86               none        g,i\nltp-opt-20130904      Slack-14.1/x86_64  Slack-14.0/x86   kompat, fake_id0    g,h,i,j\n\nperl-5.18.1           Slack-14.1/x86_64    same as host               none          k\nperl-5.18.1           Slack-14.1/x86_64    same as host   kompat, fake_id0        k,l\nperl-5.18.1           Slack-14.1/x86_64  Slack-14.0/x86               none          k\nperl-5.18.1           Slack-14.1/x86_64  Slack-14.0/x86   kompat, fake_id0        k,l\n\ngdb-7.6.1             Slack-14.1/x86_64    same as host               none          m\ngdb-7.6.1             Slack-14.1/x86_64    same as host   kompat, fake_id0        m,n\ngdb-7.6.1             Slack-14.1/x86_64  Slack-14.0/x86               none        m,o\n\nproot-v3.2.2          Slack-14.1/x86_64    same as host               none          p\nproot-v3.2.2          Slack-14.1/x86_64    same as host           fake_id0          p\nproot-v3.2.2          Slack-14.1/x86_64  Slack-14.0/x86               none          p\nproot-v3.2.2          Slack-14.1/x86_64  Slack-14.0/x86           fake_id0          p\n\nperl-5.16.1           Slack-14.1/x86_64  Ubuntu-14.10/ARM     qemu-2.1-rc0          q\ncoreutils-8.19        Slack-14.1/x86_64  Ubuntu-14.10/ARM     qemu-2.1-rc0        k,r\n\nperformance           Slack-14.1/x86_64            none               none        NTR\nCoverity Scan         Travis-CI                     N/A                N/A        NTR\nClang 3.3             Slack-14.1/x86_64             N/A                N/A        NTR\n====================  =================  ==============  =================  =========\n\na: is OK or has same failures as native\n\nb: fails on some AMD CPUs.  No explanations yet.\n\nc: failures = signal_multiple_loops, fs_chown\n\nd: failures = brk01, creat07, execve04, mremap03, msync03, madvise01,\n   madvise03, madvise04, pwrite03, pwrite03_64, rmdir02\n\n   skipped = msgctl10, msgctl11\n\ne: too many failures to be listed here.  These failures are mostly\n   related to the fake_id0 extensions but are not unexpected.\n\nf: failures = bdflush01, modify_ldt01, semctl01, semctl03, semctl05,\n   socketcall01\n\ng: failures = timer_getoverrun_2-3\n\nh: failures = fork_1-1 sem_unlink_3-1 sigaction_4-52 sigaction_4-32\n\ni: failures = mmap_31-1\n\nj: failures = mlock_12-1, sem_unlink_3-1\n\nk: failures = op/magic.t\n\nl: failures = File-Path/t/Path.t Net-Ping/t/110_icmp_inst.t\n   Net-Ping/t/500_ping_icmp.t Net-Ping/t/520_icmp_ttl.t\n\nm: failures = break-interp, checkpoint, foll-exec, info-os, jit\n\n   skipped = foll-fork, foll-vfork, watch_thread_num, attach-twice\n\nn: failures = fileio\n\no: failures = call-sc callfuncs find-unmapped finish float interrupt\n   return-nodebug return return2 siginfo-obj siginfo-thread signals\n   sigstep varargs ext-attach server-exec-info\n\np: failures = test-092c5e26\n\nq: failures = rm/deep-2 misc/env misc/printenv split/fail dd/skip-seek\n   dd/skip-seek-past-file du/long-from-unreadable install/basic-1\n   mkdir/p-3\n\nr: failures = HTTP-Tiny/t/002_croakage.t HTTP-Tiny/t/003_agent.t\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
