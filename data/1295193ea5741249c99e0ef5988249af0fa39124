{
  "node_id": "MDM6VGFnMTE0NzY5ODoxMjk1MTkzZWE1NzQxMjQ5Yzk5ZTBlZjU5ODgyNDlhZjBmYTM5MTI0",
  "sha": "1295193ea5741249c99e0ef5988249af0fa39124",
  "url": "https://api.github.com/repos/proot-me/proot/git/tags/1295193ea5741249c99e0ef5988249af0fa39124",
  "tagger": {
    "name": "Cédric VINCENT",
    "email": "cedric.vincent@st.com",
    "date": "2012-10-31T08:05:25Z"
  },
  "object": {
    "sha": "6d0cca71e2e245b161d2b66a29bb6eec233ef9d7",
    "type": "commit",
    "url": "https://api.github.com/repos/proot-me/proot/git/commits/6d0cca71e2e245b161d2b66a29bb6eec233ef9d7"
  },
  "tag": "v2.3",
  "message": "Release v2.3\n============\n\nThis release is intended more specifically to developers and advanced\nusers, it was mostly driven by the requirements of an internal\nSTMicroelectronics project named \"Auto-Tuning Optimization Service\".\n\nNew features\n------------\n\n* There's now an extension mechanism in PRoot that allows developers\n  to add their own features and/or to use PRoot as a Linux process\n  instrumentation engine.  The two following old features were moved\n  to this new extension interface: \"-k *string*\" and \"-0\"\n  (respectively: set the kernel release and compatibility level to\n  *string*\"; and force some syscalls to behave as if executed by\n  \"root\").\n\n* It is now possible to execute PRoot under PRoot, well somewhat.\n  Actually the initial instance of PRoot detects that it is being\n  called again and recomputes the configuration for the new process\n  tree.  This feature is still experimental and was way harder to\n  implement than expected, however it was worth the effort since it\n  enforced the consistency in PRoot.  Just one example among many, in\n  PRoot the \"chroot\" feature is now really equivalent to the\n  \"mount/bind\" one, that is, ``chroot path/to/rootfs`` is similar to\n  ``mount --bind path/to/rootfs /``.\n\n* The \"current working directory\" (chdir(2), getcwd(2), ...) is now\n  fully emulated by PRoot.  Sadly a minor regression was introduced:\n  even if the current working directory has been removed, getcwd(2)\n  returns a \"correct\" value.  This should be fixed in the next\n  release.\n\nCommand-line interface changes\n------------------------------\n\n* The message \"proot info: started/exited\" isn't printed by default\n  anymore since it might introduce noise when PRoot is used inside a\n  test-suite that compares outputs.  This message was initially added\n  to know whether the guest program has exited immediately.\n\n* The \"-u\" and \"-W\" options have disappeared.  The former wasn't\n  really useful and the latter was definitely useless since the\n  default \"current working directory\" is \".\" since v2.1, that means\n  the three examples below are equivalent (\"-W\" was just an alias to\n  \"-b . -w .\")::\n\n      proot -b . [...]\n      proot -b . -w . [...]\n      proot -W [...]\n\nFixes\n-----\n\n* The option ``-w .`` is now really equivalent to ``-w $PWD``.\n\n* A bug almost impossible to describe here has been fixed, it appeared\n  only when specifying relative bindings, for instance: ``-b .``.\n\nInternal changes\n----------------\n\n* PRoot now relies on Talloc: a hierarchical, reference counted memory\n  pool system with destructors.  It is the core memory allocator used\n  in Samba: http://talloc.samba.org.  This is definitely a worthwhile\n  dependency for the sake of development scalability and\n  debuggability.  For example, PRoot now has an explicit garbage\n  collector (c.f. ``tracee->ctx``), and the full dynamic memory\n  hierarchy can be printed by sending the USR1 signal to PRoot::\n\n      native-shell$ proot --mount=$HOME --mount=/proc --rootfs=./slackware-14/\n      prooted-shell$ kill -s USR1 $(grep Tracer /proc/self/status | cut -f 2)\n\n      Tracee           0x6150c0  768 bytes  0 ref'    (pid = 22495)\n          talloc_new: ./tracee/tracee.c:97 0x615420  0 bytes  0 ref'\n          $exe             0x61bef0  10 bytes  0 ref'     (\"/bin/bash\")\n          @cmdline         0x61bf60  16 bytes  0 ref'     (\"/bin/sh\", )\n              /bin/sh          0x61bfd0  8 bytes  0 ref'\n          $glue            0x61bae0  24 bytes  0 ref'     (\"/tmp/proot-22494-UfGAPh\")\n          FileSystemNameSpace 0x615480  32 bytes  0 ref'\n              $cwd             0x61b880  13 bytes  0 ref'     (\"/home/cedric\")\n              Bindings         0x61b970  16 bytes  0 ref'     (host)\n                  Binding          0x615570  8280 bytes  1 ref'   (/home/cedric:/home/cedric)\n                  Binding          0x6176a0  8280 bytes  1 ref'   (/proc:/proc)\n                  Binding          0x6197d0  8280 bytes  1 ref'   (/usr/local/proot/slackware-14:/)\n              Bindings         0x61b900  16 bytes  0 ref'     (guest)\n                  Binding          -> 0x6176a0\n                  Binding          -> 0x615570\n                  Binding          -> 0x6197d0\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (GNU/Linux)\n\niQEcBAABAgAGBQJQkNvQAAoJEChi0LD6j7VWdA0H/iHTfc7jTTK2rr7vWPEOBrs3\nEG022tZBl38NO1m7XDSGFaJl/SdAU3XLoj7wCFtsTwF/G+pwO55UEBvj57mD64WN\n9VyWUXI+Tw9vG98l40V9UbpyYQeoj/SuR/we0/pwCRCdk6sF3hWrknm6omFSAYYd\nGSI2M+pndlkUH1FQqnf7d//XD3S8Jomn4KJsBrW9tm2Abj6i9+rVsoDabFo/mpjW\nZIg2hyVsfnTFlaQV664l/qSZPf9J/nrlWW4Pld+hmOB2YL7ySHmjTsJ7bFp0DlFV\naeHgQ3rZSLwmhGV967M34MHozlWYuxifiQD30TSZlry5msOG9/RLQ/NT/yaDvcs=\n=gv1J\n-----END PGP SIGNATURE-----\n",
  "verification": {
    "verified": false,
    "reason": "unknown_key",
    "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (GNU/Linux)\n\niQEcBAABAgAGBQJQkNvQAAoJEChi0LD6j7VWdA0H/iHTfc7jTTK2rr7vWPEOBrs3\nEG022tZBl38NO1m7XDSGFaJl/SdAU3XLoj7wCFtsTwF/G+pwO55UEBvj57mD64WN\n9VyWUXI+Tw9vG98l40V9UbpyYQeoj/SuR/we0/pwCRCdk6sF3hWrknm6omFSAYYd\nGSI2M+pndlkUH1FQqnf7d//XD3S8Jomn4KJsBrW9tm2Abj6i9+rVsoDabFo/mpjW\nZIg2hyVsfnTFlaQV664l/qSZPf9J/nrlWW4Pld+hmOB2YL7ySHmjTsJ7bFp0DlFV\naeHgQ3rZSLwmhGV967M34MHozlWYuxifiQD30TSZlry5msOG9/RLQ/NT/yaDvcs=\n=gv1J\n-----END PGP SIGNATURE-----\n",
    "payload": "object 6d0cca71e2e245b161d2b66a29bb6eec233ef9d7\ntype commit\ntag v2.3\ntagger Cédric VINCENT <cedric.vincent@st.com> 1351670725 +0100\n\nRelease v2.3\n============\n\nThis release is intended more specifically to developers and advanced\nusers, it was mostly driven by the requirements of an internal\nSTMicroelectronics project named \"Auto-Tuning Optimization Service\".\n\nNew features\n------------\n\n* There's now an extension mechanism in PRoot that allows developers\n  to add their own features and/or to use PRoot as a Linux process\n  instrumentation engine.  The two following old features were moved\n  to this new extension interface: \"-k *string*\" and \"-0\"\n  (respectively: set the kernel release and compatibility level to\n  *string*\"; and force some syscalls to behave as if executed by\n  \"root\").\n\n* It is now possible to execute PRoot under PRoot, well somewhat.\n  Actually the initial instance of PRoot detects that it is being\n  called again and recomputes the configuration for the new process\n  tree.  This feature is still experimental and was way harder to\n  implement than expected, however it was worth the effort since it\n  enforced the consistency in PRoot.  Just one example among many, in\n  PRoot the \"chroot\" feature is now really equivalent to the\n  \"mount/bind\" one, that is, ``chroot path/to/rootfs`` is similar to\n  ``mount --bind path/to/rootfs /``.\n\n* The \"current working directory\" (chdir(2), getcwd(2), ...) is now\n  fully emulated by PRoot.  Sadly a minor regression was introduced:\n  even if the current working directory has been removed, getcwd(2)\n  returns a \"correct\" value.  This should be fixed in the next\n  release.\n\nCommand-line interface changes\n------------------------------\n\n* The message \"proot info: started/exited\" isn't printed by default\n  anymore since it might introduce noise when PRoot is used inside a\n  test-suite that compares outputs.  This message was initially added\n  to know whether the guest program has exited immediately.\n\n* The \"-u\" and \"-W\" options have disappeared.  The former wasn't\n  really useful and the latter was definitely useless since the\n  default \"current working directory\" is \".\" since v2.1, that means\n  the three examples below are equivalent (\"-W\" was just an alias to\n  \"-b . -w .\")::\n\n      proot -b . [...]\n      proot -b . -w . [...]\n      proot -W [...]\n\nFixes\n-----\n\n* The option ``-w .`` is now really equivalent to ``-w $PWD``.\n\n* A bug almost impossible to describe here has been fixed, it appeared\n  only when specifying relative bindings, for instance: ``-b .``.\n\nInternal changes\n----------------\n\n* PRoot now relies on Talloc: a hierarchical, reference counted memory\n  pool system with destructors.  It is the core memory allocator used\n  in Samba: http://talloc.samba.org.  This is definitely a worthwhile\n  dependency for the sake of development scalability and\n  debuggability.  For example, PRoot now has an explicit garbage\n  collector (c.f. ``tracee->ctx``), and the full dynamic memory\n  hierarchy can be printed by sending the USR1 signal to PRoot::\n\n      native-shell$ proot --mount=$HOME --mount=/proc --rootfs=./slackware-14/\n      prooted-shell$ kill -s USR1 $(grep Tracer /proc/self/status | cut -f 2)\n\n      Tracee           0x6150c0  768 bytes  0 ref'    (pid = 22495)\n          talloc_new: ./tracee/tracee.c:97 0x615420  0 bytes  0 ref'\n          $exe             0x61bef0  10 bytes  0 ref'     (\"/bin/bash\")\n          @cmdline         0x61bf60  16 bytes  0 ref'     (\"/bin/sh\", )\n              /bin/sh          0x61bfd0  8 bytes  0 ref'\n          $glue            0x61bae0  24 bytes  0 ref'     (\"/tmp/proot-22494-UfGAPh\")\n          FileSystemNameSpace 0x615480  32 bytes  0 ref'\n              $cwd             0x61b880  13 bytes  0 ref'     (\"/home/cedric\")\n              Bindings         0x61b970  16 bytes  0 ref'     (host)\n                  Binding          0x615570  8280 bytes  1 ref'   (/home/cedric:/home/cedric)\n                  Binding          0x6176a0  8280 bytes  1 ref'   (/proc:/proc)\n                  Binding          0x6197d0  8280 bytes  1 ref'   (/usr/local/proot/slackware-14:/)\n              Bindings         0x61b900  16 bytes  0 ref'     (guest)\n                  Binding          -> 0x6176a0\n                  Binding          -> 0x615570\n                  Binding          -> 0x6197d0\n"
  }
}
