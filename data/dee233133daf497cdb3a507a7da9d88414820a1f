{
  "node_id": "MDM6VGFnNjA4NzgwNDk6ZGVlMjMzMTMzZGFmNDk3Y2RiM2E1MDdhN2RhOWQ4ODQxNDgyMGExZg==",
  "sha": "dee233133daf497cdb3a507a7da9d88414820a1f",
  "url": "https://api.github.com/repos/manuelnaranjo/glibc-toolchain-linaro/git/tags/dee233133daf497cdb3a507a7da9d88414820a1f",
  "tagger": {
    "name": "Carlos O'Donell",
    "email": "carlos@systemhalted.org",
    "date": "2015-02-06T06:42:58Z"
  },
  "object": {
    "sha": "4e42b5b8f89f0e288e68be7ad70f9525aebc2cff",
    "type": "commit",
    "url": "https://api.github.com/repos/manuelnaranjo/glibc-toolchain-linaro/git/commits/4e42b5b8f89f0e288e68be7ad70f9525aebc2cff"
  },
  "tag": "glibc-2.21",
  "message": "The GNU C Library\n=================\n\nThe GNU C Library version 2.21 is now available.\n\nThe GNU C Library is used as *the* C library in the GNU system and\nin GNU/Linux systems, as well as many other systems that use Linux\nas the kernel.\n\nThe GNU C Library is primarily designed to be a portable\nand high performance C library.  It follows all relevant\nstandards including ISO C11 and POSIX.1-2008.  It is also\ninternationalized and has one of the most complete\ninternationalization interfaces known.\n\nThe GNU C Library webpage is at http://www.gnu.org/software/libc/\n\nPackages for the 2.21 release may be downloaded from:\n        http://ftpmirror.gnu.org/libc/\n        http://ftp.gnu.org/gnu/libc/\n\nThe mirror list is at http://www.gnu.org/order/ftp.html\n\nNEWS for version 2.21\n=====================\n\n* The following bugs are resolved with this release:\n\n  6652, 10672, 12674, 12847, 12926, 13862, 14132, 14138, 14171, 14498,\n  15215, 15378, 15884, 16009, 16418, 16191, 16469, 16576, 16617, 16618,\n  16619, 16657, 16740, 16857, 17192, 17266, 17273, 17344, 17363, 17370,\n  17371, 17411, 17460, 17475, 17485, 17501, 17506, 17508, 17522, 17555,\n  17570, 17571, 17572, 17573, 17574, 17582, 17583, 17584, 17585, 17589,\n  17594, 17601, 17608, 17616, 17625, 17630, 17633, 17634, 17635, 17647,\n  17653, 17657, 17658, 17664, 17665, 17668, 17682, 17702, 17717, 17719,\n  17722, 17723, 17724, 17725, 17732, 17733, 17744, 17745, 17746, 17747,\n  17748, 17775, 17777, 17780, 17781, 17782, 17791, 17793, 17796, 17797,\n  17801, 17803, 17806, 17834, 17844, 17848, 17868, 17869, 17870, 17885,\n  17892.\n\n* CVE-2015-1472 Under certain conditions wscanf can allocate too little\n  memory for the to-be-scanned arguments and overflow the allocated\n  buffer.  The implementation now correctly computes the required buffer\n  size when using malloc.\n\n* A new semaphore algorithm has been implemented in generic C code for all\n  machines. Previous custom assembly implementations of semaphore were\n  difficult to reason about or ensure that they were safe. The new version\n  of semaphore supports machines with 64-bit or 32-bit atomic operations.\n  The new semaphore algorithm is used by sem_init, sem_open, sem_post,\n  sem_wait, sem_timedwait, sem_trywait, and sem_getvalue.\n\n* Port to Altera Nios II has been contributed by Mentor Graphics.\n\n* Optimized strcpy, stpcpy, strncpy, stpncpy, strcmp, and strncmp\n  implementations for powerpc64/powerpc64le.\n  Implemented by Adhemerval Zanella (IBM).\n\n* Added support for TSX lock elision of pthread mutexes on powerpc32, powerpc64\n  and powerpc64le.  This may improve lock scaling of existing programs on\n  HTM capable systems.  The lock elision code is only enabled with\n  --enable-lock-elision=yes.  Also, the TSX lock elision implementation for\n  powerpc will issue a transaction abort on every syscall to avoid side\n  effects being visible outside transactions.\n\n* Optimized strcpy, stpcpy, strchrnul and strrchr implementations for\n  AArch64.  Contributed by ARM Ltd.\n\n* i386 memcpy functions optimized with SSE2 unaligned load/store.\n\n* CVE-2104-7817 The wordexp function could ignore the WRDE_NOCMD flag\n  under certain input conditions resulting in the execution of a shell for\n  command substitution when the applicaiton did not request it. The\n  implementation now checks WRDE_NOCMD immediately before executing the\n  shell and returns the error WRDE_CMDSUB as expected.\n\n* CVE-2012-3406 printf-style functions could run into a stack overflow when\n  processing format strings with a large number of format specifiers.\n\n* CVE-2014-9402 The nss_dns implementation of getnetbyname could run into an\n  infinite loop if the DNS response contained a PTR record of an unexpected\n  format.\n\n* The minimum GCC version that can be used to build this version of the GNU\n  C Library is GCC 4.6.  Older GCC versions, and non-GNU compilers, can\n  still be used to compile programs using the GNU C Library.\n\n* The GNU C Library is now built with -Werror by default.  This can be\n  disabled by configuring with --disable-werror.\n\n* New locales: tu_IN, bh_IN, raj_IN, ce_RU.\n\n* The obsolete sigvec function has been removed.  This was the original\n  4.2BSD interface that inspired the POSIX.1 sigaction interface, which\n  programs have been using instead for about 25 years.  Of course, ABI\n  compatibility for old binaries using sigvec remains intact.\n\n* Merged gettext 0.19.3 into the intl subdirectory.  This fixes building\n  with newer versions of bison.\n\n* Support for MIPS o32 FPXX, FP64A and FP64 ABI Extensions.\n  The original MIPS o32 hard-float ABI requires an FPU where double-precision\n  registers overlay two consecutive single-precision registers.  MIPS32R2\n  introduced a new FPU mode (FR=1) where double-precision registers extend the\n  corresponding single-precision registers which is incompatible with the\n  o32 hard-float ABI.  The MIPS SIMD ASE and the MIPSR6 architecture both\n  require the use of FR=1 making a transition necessary.  New o32 ABI\n  extensions enable users to migrate over time from the original o32 ABI\n  through to the updated o32 FP64 ABI.  To achieve this the dynamic linker now\n  tracks the ABI of any loaded object and verifies that new objects are\n  compatible.  Mode transitions will also be requested as required and\n  unsupportable objects will be rejected.  The ABI checks include both soft and\n  hard float ABIs for o32, n32 and n64.\n\n  GCC 5 with GNU binutils 2.25 onwards:\n  It is strongly recommended that all o32 system libraries are built using the\n  new o32 FPXX ABI (-mfpxx) to facilitate the transition as this is compatible\n  with the original and all new o32 ABI extensions.  Configure a MIPS GCC\n  compiler using --with-fp-32=xx to set this by default.\n\nContributors\n============\n\nThis release was made possible by the contributions of many people.\nThe maintainers are grateful to everyone who has contributed\nchanges or bug reports.  These include:\n\nAdhemerval Zanella\nAlan Hayward\nAlexandre Oliva\nAllan McRae\nAnders Kaseorg\nAndreas Krebbel\nAndreas Schwab\nAndrew Pinski\nAndrew Senkevich\nAnton Blanchard\nArjun Shankar\nAurelien Jarno\nBram\nBrooks Moses\nCarlos O'Donell\nChris Metcalf\nChung-Lin Tang\nDavid Holsgrove\nDavid S. Miller\nEric Biggers\nFlorian Weimer\nGratian Crisan\nH.J. Lu\nJ. Brown\nJames Lemke\nJeff Law\nJose E. Marchesi\nJoseph Myers\nKaz Kojima\nKostya Serebryany\nLeonhard Holz\nMa Shimiao\nMaciej W. Rozycki\nMarcus Shawcroft\nMarek Polacek\nMartin Sebor\nMatthew Fortune\nMike Frysinger\nOndřej Bílka\nPaul Eggert\nPaul Pluzhnikov\nPetar Jovanovic\nPravin Satpute\nRajalakshmi Srinivasaraghavan\nRasmus Villemoes\nRenlin Li\nRichard Earnshaw\nRichard Henderson\nRoland McGrath\nRyan Cumming\nSamuel Thibault\nSiddhesh Poyarekar\nStefan Liebler\nSteve Ellcey\nTatiana Udalova\nTim Lammens\nTom de Vries\nTorvald Riegel\nVladimir A. Nazarenko\nWilco Dijkstra\nWill Newton\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJU1GKVAAoJECXvCkNsKkr/4IYIAMfU5+NN2z44R2SeRlH+bSZG\nrGCF7rUzUOY+ePVNdgOH2cUKfxuLyMU6aao/IVQ863VHW1Ct/x2goVU22oqnVmvP\nFeElVxZyzx7iCqipqyaobj0Fm/b563/4yQ+BEOjH39Sj5Ii5kY6PcQQslMJWIH5R\n/nHmO048ZAlx/vGWTczAR50HOW1z8H1gilWm8SBkq2BJ8UndhSXCVpThCdMGfeBF\nNUxUl2aSt3eghA0SWD3WgRzRR0vU9RHuNQ5k5ggjjRPtipa8DP04t0Bk7/QiLhj1\nM2upSS7r4ceZZuFGX8oYVn3f0lTajpOOeuX7SBnKIgQ8cDXtSHST6yPMAbsJRB4=\n=odoa\n-----END PGP SIGNATURE-----\n",
  "verification": {
    "verified": false,
    "reason": "unknown_key",
    "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJU1GKVAAoJECXvCkNsKkr/4IYIAMfU5+NN2z44R2SeRlH+bSZG\nrGCF7rUzUOY+ePVNdgOH2cUKfxuLyMU6aao/IVQ863VHW1Ct/x2goVU22oqnVmvP\nFeElVxZyzx7iCqipqyaobj0Fm/b563/4yQ+BEOjH39Sj5Ii5kY6PcQQslMJWIH5R\n/nHmO048ZAlx/vGWTczAR50HOW1z8H1gilWm8SBkq2BJ8UndhSXCVpThCdMGfeBF\nNUxUl2aSt3eghA0SWD3WgRzRR0vU9RHuNQ5k5ggjjRPtipa8DP04t0Bk7/QiLhj1\nM2upSS7r4ceZZuFGX8oYVn3f0lTajpOOeuX7SBnKIgQ8cDXtSHST6yPMAbsJRB4=\n=odoa\n-----END PGP SIGNATURE-----\n",
    "payload": "object 4e42b5b8f89f0e288e68be7ad70f9525aebc2cff\ntype commit\ntag glibc-2.21\ntagger Carlos O'Donell <carlos@systemhalted.org> 1423204978 -0500\n\nThe GNU C Library\n=================\n\nThe GNU C Library version 2.21 is now available.\n\nThe GNU C Library is used as *the* C library in the GNU system and\nin GNU/Linux systems, as well as many other systems that use Linux\nas the kernel.\n\nThe GNU C Library is primarily designed to be a portable\nand high performance C library.  It follows all relevant\nstandards including ISO C11 and POSIX.1-2008.  It is also\ninternationalized and has one of the most complete\ninternationalization interfaces known.\n\nThe GNU C Library webpage is at http://www.gnu.org/software/libc/\n\nPackages for the 2.21 release may be downloaded from:\n        http://ftpmirror.gnu.org/libc/\n        http://ftp.gnu.org/gnu/libc/\n\nThe mirror list is at http://www.gnu.org/order/ftp.html\n\nNEWS for version 2.21\n=====================\n\n* The following bugs are resolved with this release:\n\n  6652, 10672, 12674, 12847, 12926, 13862, 14132, 14138, 14171, 14498,\n  15215, 15378, 15884, 16009, 16418, 16191, 16469, 16576, 16617, 16618,\n  16619, 16657, 16740, 16857, 17192, 17266, 17273, 17344, 17363, 17370,\n  17371, 17411, 17460, 17475, 17485, 17501, 17506, 17508, 17522, 17555,\n  17570, 17571, 17572, 17573, 17574, 17582, 17583, 17584, 17585, 17589,\n  17594, 17601, 17608, 17616, 17625, 17630, 17633, 17634, 17635, 17647,\n  17653, 17657, 17658, 17664, 17665, 17668, 17682, 17702, 17717, 17719,\n  17722, 17723, 17724, 17725, 17732, 17733, 17744, 17745, 17746, 17747,\n  17748, 17775, 17777, 17780, 17781, 17782, 17791, 17793, 17796, 17797,\n  17801, 17803, 17806, 17834, 17844, 17848, 17868, 17869, 17870, 17885,\n  17892.\n\n* CVE-2015-1472 Under certain conditions wscanf can allocate too little\n  memory for the to-be-scanned arguments and overflow the allocated\n  buffer.  The implementation now correctly computes the required buffer\n  size when using malloc.\n\n* A new semaphore algorithm has been implemented in generic C code for all\n  machines. Previous custom assembly implementations of semaphore were\n  difficult to reason about or ensure that they were safe. The new version\n  of semaphore supports machines with 64-bit or 32-bit atomic operations.\n  The new semaphore algorithm is used by sem_init, sem_open, sem_post,\n  sem_wait, sem_timedwait, sem_trywait, and sem_getvalue.\n\n* Port to Altera Nios II has been contributed by Mentor Graphics.\n\n* Optimized strcpy, stpcpy, strncpy, stpncpy, strcmp, and strncmp\n  implementations for powerpc64/powerpc64le.\n  Implemented by Adhemerval Zanella (IBM).\n\n* Added support for TSX lock elision of pthread mutexes on powerpc32, powerpc64\n  and powerpc64le.  This may improve lock scaling of existing programs on\n  HTM capable systems.  The lock elision code is only enabled with\n  --enable-lock-elision=yes.  Also, the TSX lock elision implementation for\n  powerpc will issue a transaction abort on every syscall to avoid side\n  effects being visible outside transactions.\n\n* Optimized strcpy, stpcpy, strchrnul and strrchr implementations for\n  AArch64.  Contributed by ARM Ltd.\n\n* i386 memcpy functions optimized with SSE2 unaligned load/store.\n\n* CVE-2104-7817 The wordexp function could ignore the WRDE_NOCMD flag\n  under certain input conditions resulting in the execution of a shell for\n  command substitution when the applicaiton did not request it. The\n  implementation now checks WRDE_NOCMD immediately before executing the\n  shell and returns the error WRDE_CMDSUB as expected.\n\n* CVE-2012-3406 printf-style functions could run into a stack overflow when\n  processing format strings with a large number of format specifiers.\n\n* CVE-2014-9402 The nss_dns implementation of getnetbyname could run into an\n  infinite loop if the DNS response contained a PTR record of an unexpected\n  format.\n\n* The minimum GCC version that can be used to build this version of the GNU\n  C Library is GCC 4.6.  Older GCC versions, and non-GNU compilers, can\n  still be used to compile programs using the GNU C Library.\n\n* The GNU C Library is now built with -Werror by default.  This can be\n  disabled by configuring with --disable-werror.\n\n* New locales: tu_IN, bh_IN, raj_IN, ce_RU.\n\n* The obsolete sigvec function has been removed.  This was the original\n  4.2BSD interface that inspired the POSIX.1 sigaction interface, which\n  programs have been using instead for about 25 years.  Of course, ABI\n  compatibility for old binaries using sigvec remains intact.\n\n* Merged gettext 0.19.3 into the intl subdirectory.  This fixes building\n  with newer versions of bison.\n\n* Support for MIPS o32 FPXX, FP64A and FP64 ABI Extensions.\n  The original MIPS o32 hard-float ABI requires an FPU where double-precision\n  registers overlay two consecutive single-precision registers.  MIPS32R2\n  introduced a new FPU mode (FR=1) where double-precision registers extend the\n  corresponding single-precision registers which is incompatible with the\n  o32 hard-float ABI.  The MIPS SIMD ASE and the MIPSR6 architecture both\n  require the use of FR=1 making a transition necessary.  New o32 ABI\n  extensions enable users to migrate over time from the original o32 ABI\n  through to the updated o32 FP64 ABI.  To achieve this the dynamic linker now\n  tracks the ABI of any loaded object and verifies that new objects are\n  compatible.  Mode transitions will also be requested as required and\n  unsupportable objects will be rejected.  The ABI checks include both soft and\n  hard float ABIs for o32, n32 and n64.\n\n  GCC 5 with GNU binutils 2.25 onwards:\n  It is strongly recommended that all o32 system libraries are built using the\n  new o32 FPXX ABI (-mfpxx) to facilitate the transition as this is compatible\n  with the original and all new o32 ABI extensions.  Configure a MIPS GCC\n  compiler using --with-fp-32=xx to set this by default.\n\nContributors\n============\n\nThis release was made possible by the contributions of many people.\nThe maintainers are grateful to everyone who has contributed\nchanges or bug reports.  These include:\n\nAdhemerval Zanella\nAlan Hayward\nAlexandre Oliva\nAllan McRae\nAnders Kaseorg\nAndreas Krebbel\nAndreas Schwab\nAndrew Pinski\nAndrew Senkevich\nAnton Blanchard\nArjun Shankar\nAurelien Jarno\nBram\nBrooks Moses\nCarlos O'Donell\nChris Metcalf\nChung-Lin Tang\nDavid Holsgrove\nDavid S. Miller\nEric Biggers\nFlorian Weimer\nGratian Crisan\nH.J. Lu\nJ. Brown\nJames Lemke\nJeff Law\nJose E. Marchesi\nJoseph Myers\nKaz Kojima\nKostya Serebryany\nLeonhard Holz\nMa Shimiao\nMaciej W. Rozycki\nMarcus Shawcroft\nMarek Polacek\nMartin Sebor\nMatthew Fortune\nMike Frysinger\nOndřej Bílka\nPaul Eggert\nPaul Pluzhnikov\nPetar Jovanovic\nPravin Satpute\nRajalakshmi Srinivasaraghavan\nRasmus Villemoes\nRenlin Li\nRichard Earnshaw\nRichard Henderson\nRoland McGrath\nRyan Cumming\nSamuel Thibault\nSiddhesh Poyarekar\nStefan Liebler\nSteve Ellcey\nTatiana Udalova\nTim Lammens\nTom de Vries\nTorvald Riegel\nVladimir A. Nazarenko\nWilco Dijkstra\nWill Newton\n"
  }
}
