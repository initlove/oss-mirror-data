{
  "node_id": "MDM6VGFnMTE0NzY5ODo3YmUzNWVhYzZlMDdkZTYyMDI3ZjMwZDZhNTEzMzQ5ODNjMDU2MmNl",
  "sha": "7be35eac6e07de62027f30d6a51334983c0562ce",
  "url": "https://api.github.com/repos/proot-me/proot/git/tags/7be35eac6e07de62027f30d6a51334983c0562ce",
  "tagger": {
    "name": "Cédric VINCENT",
    "email": "cedric.vincent@st.com",
    "date": "2013-06-03T12:18:20Z"
  },
  "object": {
    "sha": "5fa7b727135d13a6dce0d1bbb8593241405e7a38",
    "type": "commit",
    "url": "https://api.github.com/repos/proot-me/proot/git/commits/5fa7b727135d13a6dce0d1bbb8593241405e7a38"
  },
  "tag": "v3.0",
  "message": "Release v3.0\n============\n\nNew features\n------------\n\n* PRoot can now use the kernel feature named \"seccomp-filter\", a.k.a\n  \"seccomp mode 2\", to improve its own performance significantly.  For\n  examples, the tables below show the time overhead induced by PRoot\n  compared to a native execution:\n\n  - when generating the Perl 5.16.1 package:\n\n    ===============  ===========  ==========\n    command          seccomp off  seccomp on\n    ===============  ===========  ==========\n    ./configure.gnu          75%         25%\n    make -j4                 70%         45%\n    make -j4 check           25%          9%\n    ===============  ===========  ==========\n\n  - when generating the Coreutils 8.19 package:\n\n    ===============  ===========  ==========\n    command          seccomp off  seccomp on\n    ===============  ===========  ==========\n    ./configure              80%         33%\n    make -j4                 75%         33%\n    make -j4 check           80%          8%\n    ===============  ===========  ==========\n\n* It is now possible to explicitly not dereference the guest location\n  of a binding by specifying ``!`` as the first character.  For\n  instance::\n\n      proot -b /bin/bash:!/bin/sh\n\n  will not overlay ``/bin/dash`` when this latter is pointed to by\n  ``/bin/sh`` (it's typically the case on Ubuntu and Debian).\n\nFix\n---\n\n* The initial command is not search in $PATH anymore when it starts\n  with ``/`` or ``./``, and it doesn't exist.  For instance::\n\n      $ rm test\n      $ proot ./test\n      proot warning: './test not found (root = /, cwd = /usr/local/cedric/git/proot)\n      proot error: see `proot --help` or `man proot`.\n\nThanks\n------\n\nMany thanks to Will Drewry and Indan Zupancic, who made possible to\naccelerate PTRACE_SYSCALL with seccomp-filter.  Also, thanks to Paul\nMoore for his valuable set of seccomp tools.\n\nNotes\n-----\n\n* Unlike what I said, this release is not shipped with a ptrace\n  emulator.  It's planned for the next one, though.\n\n* Seccomp-filter was first introduced in Linux 3.5 a year ago, it was\n  also officially back-ported to Ubuntu 12.04 (Linux 3.2).  To know if\n  PRoot is actually using this accelerator on your system, check the\n  verbose output.  For intance::\n\n    $ proot -v 1 true\n    ...\n    proot info: ptrace acceleration (seccomp mode 2) enabled\n    ...\n\n  But first, be sure it was built with this support::\n\n    $ proot -V\n    ...\n    built-in accelerators: process_vm = yes, seccomp_filter = yes\n    ...\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (GNU/Linux)\n\niQEcBAABAgAGBQJRrImcAAoJEChi0LD6j7VWamAH/RDmfDhNxM68jihTs7wYJsXG\nJzVloaNXP/Pyg3OHPi53ASJa5pD7jmZty2+yFxsbeskfXFTmpOYUy20Md7z5aQQY\nY2XtCb8cpiqLce6lvJRmy2Vp1LZs6jFxAdHwfI2XAiStohLwd/jTf4ipb6xTj2kL\nkuoSfKk9yoajmjwhEQho4c++XcFU9BWN6tdyubOlIf1lfyFg4bOVmb4yCasFYlKM\nZC47m+B8at1DifRXLquWBssghzOnOethDjNgym3TU0bRy+HC2t7fDcAAZrpSpSzP\nKj0D5qJxFYRa6VTnrI26hpP6dbo9KhKiR2YyTG2O+xVo5iRtLvhbzfeH45aUXQA=\n=O/tV\n-----END PGP SIGNATURE-----\n",
  "verification": {
    "verified": false,
    "reason": "unknown_key",
    "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (GNU/Linux)\n\niQEcBAABAgAGBQJRrImcAAoJEChi0LD6j7VWamAH/RDmfDhNxM68jihTs7wYJsXG\nJzVloaNXP/Pyg3OHPi53ASJa5pD7jmZty2+yFxsbeskfXFTmpOYUy20Md7z5aQQY\nY2XtCb8cpiqLce6lvJRmy2Vp1LZs6jFxAdHwfI2XAiStohLwd/jTf4ipb6xTj2kL\nkuoSfKk9yoajmjwhEQho4c++XcFU9BWN6tdyubOlIf1lfyFg4bOVmb4yCasFYlKM\nZC47m+B8at1DifRXLquWBssghzOnOethDjNgym3TU0bRy+HC2t7fDcAAZrpSpSzP\nKj0D5qJxFYRa6VTnrI26hpP6dbo9KhKiR2YyTG2O+xVo5iRtLvhbzfeH45aUXQA=\n=O/tV\n-----END PGP SIGNATURE-----\n",
    "payload": "object 5fa7b727135d13a6dce0d1bbb8593241405e7a38\ntype commit\ntag v3.0\ntagger Cédric VINCENT <cedric.vincent@st.com> 1370261900 +0200\n\nRelease v3.0\n============\n\nNew features\n------------\n\n* PRoot can now use the kernel feature named \"seccomp-filter\", a.k.a\n  \"seccomp mode 2\", to improve its own performance significantly.  For\n  examples, the tables below show the time overhead induced by PRoot\n  compared to a native execution:\n\n  - when generating the Perl 5.16.1 package:\n\n    ===============  ===========  ==========\n    command          seccomp off  seccomp on\n    ===============  ===========  ==========\n    ./configure.gnu          75%         25%\n    make -j4                 70%         45%\n    make -j4 check           25%          9%\n    ===============  ===========  ==========\n\n  - when generating the Coreutils 8.19 package:\n\n    ===============  ===========  ==========\n    command          seccomp off  seccomp on\n    ===============  ===========  ==========\n    ./configure              80%         33%\n    make -j4                 75%         33%\n    make -j4 check           80%          8%\n    ===============  ===========  ==========\n\n* It is now possible to explicitly not dereference the guest location\n  of a binding by specifying ``!`` as the first character.  For\n  instance::\n\n      proot -b /bin/bash:!/bin/sh\n\n  will not overlay ``/bin/dash`` when this latter is pointed to by\n  ``/bin/sh`` (it's typically the case on Ubuntu and Debian).\n\nFix\n---\n\n* The initial command is not search in $PATH anymore when it starts\n  with ``/`` or ``./``, and it doesn't exist.  For instance::\n\n      $ rm test\n      $ proot ./test\n      proot warning: './test not found (root = /, cwd = /usr/local/cedric/git/proot)\n      proot error: see `proot --help` or `man proot`.\n\nThanks\n------\n\nMany thanks to Will Drewry and Indan Zupancic, who made possible to\naccelerate PTRACE_SYSCALL with seccomp-filter.  Also, thanks to Paul\nMoore for his valuable set of seccomp tools.\n\nNotes\n-----\n\n* Unlike what I said, this release is not shipped with a ptrace\n  emulator.  It's planned for the next one, though.\n\n* Seccomp-filter was first introduced in Linux 3.5 a year ago, it was\n  also officially back-ported to Ubuntu 12.04 (Linux 3.2).  To know if\n  PRoot is actually using this accelerator on your system, check the\n  verbose output.  For intance::\n\n    $ proot -v 1 true\n    ...\n    proot info: ptrace acceleration (seccomp mode 2) enabled\n    ...\n\n  But first, be sure it was built with this support::\n\n    $ proot -V\n    ...\n    built-in accelerators: process_vm = yes, seccomp_filter = yes\n    ...\n"
  }
}
