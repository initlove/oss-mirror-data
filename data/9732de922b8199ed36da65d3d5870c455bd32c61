{
  "node_id": "MDM6VGFnMTE0NzY5ODo5NzMyZGU5MjJiODE5OWVkMzZkYTY1ZDNkNTg3MGM0NTViZDMyYzYx",
  "sha": "9732de922b8199ed36da65d3d5870c455bd32c61",
  "url": "https://api.github.com/repos/proot-me/proot/git/tags/9732de922b8199ed36da65d3d5870c455bd32c61",
  "tagger": {
    "name": "Cédric VINCENT",
    "email": "cedric.vincent@st.com",
    "date": "2013-11-08T12:01:26Z"
  },
  "object": {
    "sha": "db1f36f84f7a299247c24474f25d9a91160bc2dc",
    "type": "commit",
    "url": "https://api.github.com/repos/proot-me/proot/git/commits/db1f36f84f7a299247c24474f25d9a91160bc2dc"
  },
  "tag": "v3.2",
  "message": "Release v3.2\n============\n\nThis release was mostly driven by the requirements of \"CARE\", a new\nproject based on PRoot that will be released publicly soon on\nhttp://reproducible.io.  For information, \"CARE\" is the short for\n\"Comprehensive Archiver for Reproducible Execution\".\n\nHighlights\n----------\n\n+ Many bugs exposed by a couple of static code analyzers (Coverity,\n  Clang, ...) and some test-suites (Linux Test Project, libuv, ...)\n  are now fixed.\n\n+ The \"kompat\" extension (\"-k\" option) can now emulate most of the\n  kernel features that would be required by the guest system but that\n  are not available on the host kernel.  For example, it can now make\n  programs from Ubuntu 13.04 64-bit run on RedHat 5 64-bit without any\n  further tweaks:\n\n     rh5-64$ proot -k 3.8 -R ubuntu-13.04-64bit/ ...\n\n+ On ARM and x86_64, the heap segment is now emulated with a regular\n  memory mapping to ensure this former always exists.  This was\n  required because some kernels might put a non-fixed memory mapping\n  right after the regular heap when using some GNU ELF interpreters\n  (ld.so) as loaders.  Without the heap segment emulation, some\n  programs like Bash would crash because the heap can't grow anymore:\n\n      bash: xmalloc: locale.c:73: cannot allocate 2 bytes (0 bytes allocated)\n\nMiscellaneous\n-------------\n\n+ When using the \"-R\" option, the path to the guest rootfs is now\n  bound into the guest rootfs itself.  This is required to run\n  programs that search for their DSOs in /proc/self/maps, like VLC for\n  instance.\n\n+ When using the \"-v\" option with a level greater than 2, syscalls are\n  now printed as strings instead of numbers, à la strace:\n\n    $ proot -v 3 true\n    [...]\n    proot info: pid 29847: sysenter start: mmap(0x0, 0x2d141, 0x1, 0x2, 0x3, 0x0) [...]\n    [...]\n\n+ The article about the migration from ScratchBox2 is now publicly\n  available:\n\n    https://github.com/cedric-vincent/PRoot/blob/v3.2/doc/articles/howto_migrate_from_scratchbox2.txt\n\nInternal changes\n----------------\n\n+ Tools based on PRoot (CARE, DepsTracker, ATOS, ...) can now easily\n  replace the original command-line interface with their own\n  command-line interface.\n\n+ It is now possible to chain forged syscalls to a regular syscall.\n  Search for \"register_chained_syscall\" in the sources for details.\n\n+ A couple of new helpers are now visible from the extensions.\n\nThanks\n------\n\n+ Bug reports and tests: Corbin Champion, Maxence Dalmais, and Nicolas\n  Cornu.\n\n+ Static code analysis: Antoine Moynault and Christophe Guillon.\n\n+ Patches: Rémi Duraffort.\n\n+ Unexpected hint: Christophe Monat :)\n\nValidation\n----------\n\n====================  =================  ==============  =================  =========\ntestsuite                   host distro    guest distro           features   comments\n====================  =================  ==============  =================  =========\nproot-v3.2                 OBS */x86_64            none                N/A          a\nproot-v3.2                    OBS */x86            none                N/A          a\nproot-v3.2             Ubuntu-10.10/arm            none               none          a\n\nproot-v3.2            Slack-14.0/x86_64            none               none          a\nproot-v3.2            Slack-14.1/x86_64            none            seccomp          a\n\nproot-v3.2/memcheck   Slack-14.1/x86_64            none               none          a\nproot-v3.2/memcheck   Slack-14.1/x86_64            none            seccomp          a\n\nproot-v3.2/asan       Slack-14.1/x86_64            none               none          a\nproot-v3.2/asan       Slack-14.1/x86_64            none            seccomp          a\n\nproot-v3.2/talleak    Slack-14.0/x86_64            none               none          a\nproot-v3.2/talleak    Slack-14.1/x86_64            none            seccomp          a\n\nlibuv-0.10.18         Slack-14.0/x86_64    same as host               none          b\nlibuv-0.10.18         Slack-14.0/x86_64    same as host             kompat       b, c\nlibuv-0.10.18         Slack-14.1/x86_64    same as host            seccomp          a\nlibuv-0.10.18         Slack-14.1/x86_64    same as host     seccomp/kompat          b\n\nlibuv-0.10.18         Slack-14.0/x86_64  Slack-14.0/x86               none          b\nlibuv-0.10.18         Slack-14.0/x86_64  Slack-14.0/x86             kompat       b, c\nlibuv-0.10.18         Slack-14.1/x86_64  Slack-14.0/x86            seccomp          a\nlibuv-0.10.18         Slack-14.1/x86_64  Slack-14.0/x86     seccomp/kompat          b\n\nltp-syscall-20130904  Slack-14.0/x86_64    same as host               none          d\nltp-syscall-20130904  Slack-14.0/x86_64    same as host             kompat       d, e\nltp-syscall-20130904  Slack-14.1/x86_64    same as host            seccomp          d\nltp-syscall-20130904  Slack-14.1/x86_64    same as host     seccomp/kompat          e\n\nltp-syscall-20130904  Slack-14.0/x86_64  Slack-14.0/x86               none       d, f\nltp-syscall-20130904  Slack-14.0/x86_64  Slack-14.0/x86             kompat    d, e ,f\nltp-syscall-20130904  Slack-14.1/x86_64  Slack-14.0/x86            seccomp       d, f\nltp-syscall-20130904  Slack-14.1/x86_64  Slack-14.0/x86     seccomp/kompat    d, e, f\n\nperl-5.18.1           Slack-14.0/x86_64    same as host               none          h\nperl-5.18.1           Slack-14.0/x86_64    same as host             kompat       h, i\nperl-5.18.1           Slack-14.1/x86_64    same as host            seccomp          h\nperl-5.18.1           Slack-14.1/x86_64    same as host     seccomp/kompat          h\n\nperl-5.18.1           Slack-14.0/x86_64  Slack-14.0/x86               none          h\nperl-5.18.1           Slack-14.0/x86_64  Slack-14.0/x86             kompat       h, i\nperl-5.18.1           Slack-14.1/x86_64  Slack-14.0/x86            seccomp          h\nperl-5.18.1           Slack-14.1/x86_64  Slack-14.0/x86     seccomp/kompat          h\n\nposixtestsuite-1.5.2  Slack-14.0/x86_64    same as host               none          a\nposixtestsuite-1.5.2  Slack-14.0/x86_64    same as host             kompat          a\nposixtestsuite-1.5.2  Slack-14.1/x86_64    same as host            seccomp          a\nposixtestsuite-1.5.2  Slack-14.1/x86_64    same as host     seccomp/kompat          a\n\nposixtestsuite-1.5.2  Slack-14.0/x86_64  Slack-14.0/x86               none          j\nposixtestsuite-1.5.2  Slack-14.0/x86_64  Slack-14.0/x86             kompat          j\nposixtestsuite-1.5.2  Slack-14.1/x86_64  Slack-14.0/x86            seccomp          j\nposixtestsuite-1.5.2  Slack-14.1/x86_64  Slack-14.0/x86     seccomp/kompat          j\n\nperl-5.16.1           Slack-14.0/x86_64  Slack-14.0/ARM         qemu-1.6.1          h\ncoreutils-8.19        Slack-14.0/x86_64  Slack-14.0/ARM         qemu-1.6.1          k\n\nperformance           Slack-14.0/x86_64            none               none          l\n====================  =================  ==============  =================  =========\n\nComments\n--------\n\na: everything is OK\n\nb: failures:\n\n   - \"signal_multiple_loops\" (ptrace slowdown -> timeout)\n\nc: failures:\n\n   - \"threadpool_cancel_getaddrinfo\" (need investigation)\n\nd: failures:\n\n   - \"creat07\", \"execve04\" (due to the usage of a loader in PRoot)\n\n   - \"ptrace01\", \"ptrace02\", \"ptrace03\", \"ptrace05\" (no ptrace\n     emulation in PRoot)\n\n   - \"rmdir02\" (reach the PATH_MAX limit in PRoot)\n\n   - \"mremap03\", \"msync05\", \"pwrite03\", \"pwrite03_64\" (due to heap\n     emulation in PRoot)\n\n   - \"msgctl10\", \"msgctl11\", (ptrace slowdown -> timeout)\n\ne: failures:\n\n   - \"eventfd2_03\", \"pselect01\", \"pselect01_64\" (known limitation of\n     the \"kompat\" extension in PRoot)\n\nf: failures:\n\n   - \"modify_ldt01\" (need investigation)\n\nh: failures:\n\n   - \"cpan/File-Path/t/Path.t\",\n     \"dist/ExtUtils-Command/t/eu_command.t\", \"op/magic.t\" (known\n     failures due to PRoot)\n\ni: failures:\n\n   - parallel build is broken (need investigation)\n\nj: failures:\n\n   - \"pthread_attr_setdetachstate\", \"pthread_attr_getdetachstate\",\n     \"pthread_attr_init\" (need investigation)\n\nk: failures:\n\n   - \"misc/ls-misc\", \"misc/printenv\", \"split/fail\",\n     \"df/total-unprocessed\", \"dd/skip-seek\", \"dd/skip-seek-past-file\"\n     (due to QEMU user-mode)\n\n   - \"install/basic-1\", \"mkdir/p-3\", \"readlink/can-e\",\n     \"readlink/can-f\", \"readlink/can-m\" (known failures due to PRoot)\n\nl: performance regression introduced by commit 7863f562\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
