{
  "node_id": "MDM6VGFnMTE0NzY5ODo0MzNmM2Y5OWI5YTI2OWM1N2M1NzkxYzgwNDM5ZjEyYjk1ODVjZGM2",
  "sha": "433f3f99b9a269c57c5791c80439f12b9585cdc6",
  "url": "https://api.github.com/repos/proot-me/proot/git/tags/433f3f99b9a269c57c5791c80439f12b9585cdc6",
  "tagger": {
    "name": "Cédric VINCENT",
    "email": "cedric.vincent@st.com",
    "date": "2013-03-18T12:52:07Z"
  },
  "object": {
    "sha": "0e68e899e5e03ac096fe84fc1986823ce6fc8d34",
    "type": "commit",
    "url": "https://api.github.com/repos/proot-me/proot/git/commits/0e68e899e5e03ac096fe84fc1986823ce6fc8d34"
  },
  "tag": "v2.4",
  "message": "Release v2.4\n============\n\nNew architectures\n-----------------\n\n* PRoot now works natively on Linux ARM64 systems (a.k.a AArch64).\n  Note that PRoot/AArch64 doesn't support 32-bit binaries yet.\n\n* PRoot/x86_64 now supports x32 binaries/rootfs.\n\nFixes\n-----\n\n* Paths from Unix domain sockets are now translated.  For example, it\n  wasn't possible previously to use \"tmux\" in the guest rootfs if\n  another instance were running in the host rootfs.\n\n* When a host path is bound to a nonexistent guest path, PRoot tries\n  to create this latter in the guest rootfs, for some technical\n  reasons.  Previously, this \"dummy\" guest path was created with RWX\n  permissions but this might cause troubles when re-using the rootfs\n  for other purpose.  Now, this \"dummy\" guest path is created with\n  minimal permissions, and it is also possible to avoid its creation\n  by defining the PROOT_DONT_POLLUTE_ROOTFS environment variable.\n\nCommand-line interface changes\n------------------------------\n\n* The directory \"/run\" is removed from the list of recommended\n  bindings (-B option) because this creates to much conflicts with\n  programs that write in the \"/run/var\" directory.\n\n* The -0 option now makes user's files appear as if they were actually\n  owned by root, and it also fakes the success of any mode changes\n  (chmod* syscalls).  This is typically useful to create packages\n  where the files belong to the root user (it's almost always the\n  case).\n\nInternal changes\n----------------\n\n* PRoot should be even more portable now.  For instance, there's no\n  need to worry about syscallee-saved registers anymore.\n\nThanks\n------\n\nThis release was made possible thanks to, in no special order: Yvan\nRoux, Jerôme Audu, Heehooman, Yann Droneaud, and James Le Cuirot.  See\n\"git log\" for details.\n\nValidation\n----------\n\nAll the packages were built successfully on OBS.  The following tests\nwere ran on Slackware64 14.0 (and \"current-130312\" for x32) with QEMU\n1.4.0.\n\n=====================  ===========  =================  ==================\nGuest distro           Options            Testsuite          Failures\n=====================  ===========  =================  ==================\nSlackware64 14.0                    PRoot-v2.4         OK\nSlackware64 14.0       memcheck     PRoot-v2.4         OK\nSTLinux 2.4 SH4                     smoke tests        OK\nUbuntu 10.10 ARM                    PRoot-v2.4         OK\nOpenEmbedded AArch64                smoke tests        OK\nSlackware64 14.0       -r /         Perl 5.16.1        OK  2/2189  [1]_\nSlackware64 14.0       -k 3.2.29    Perl 5.16.1        OK  2/2189  [1]_\nSlackware 14.0 i486    -B           Perl 5.16.1        OK  3/2188  [2]_\nGentoo 20130130 x32    -B           Perl 5.16.1        OK  3/2188  [2]_\nSlackware 14.0 ARM     -Q qemu-arm  Perl 5.16.1        OK  3/2188  [2]_\nSlackware64 14.0       -r /         CoreUtils 8.19     OK  5/491   [3]_\nSlackware64 14.0       -k 3.2.29    CoreUtils 8.19     OK  5/491   [3]_\nSlackware 14.0 ARM     -Q qemu-arm  CoreUtils 8.19     OK  12/491  [4]_\nSlackware64 14.0       -r /         POSIX tests 1.5.1  OK  same as native\nSlackware 14.0 i486    -B           POSIX tests 1.5.1  OK  same as v2.3.1\nSlackware 14.0 ARM     -Q qemu-arm  POSIX tests 1.5.1  OK  same as v2.3.1\n=====================  ===========  =================  ==================\n\n.. [1] not a regression: cpan/File-Path/t/Path.t,\n       dist/ExtUtils-Command/t/eu_command.t\n\n.. [2] not a regression: op/magic.t + [1]\n\n.. [3] not a regression: install/basic-1, mkdir/p-3, readlink/can-e,\n       readlink/can-f, readlink/can-m\n\n.. [4] not a regression: misc/ls-misc, misc/printenv, split/fail,\n       misc/stty, df/total-unprocessed, dd/skip-seek,\n       dd/skip-seek-past-file, + [3]_\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (GNU/Linux)\n\niQEcBAABAgAGBQJRRw42AAoJEChi0LD6j7VWgFIH/Re6V7CFN6zPLB9nWA/t2dmE\nJpkDta2lfvQ/BzYgbf97uVrb+2IW4b6/imXJz0IReW9Z/U3DoSXbmiNUz7cOWwLA\nXWZHzHbGIqEQr1Ap3cS1+mE1JOg08eMBj/CTQGaAqhJqSFqRT9mrwJjVbm3ekhsZ\neAfXxmUyti5AdZn8MzB/mM9jY+8M4WijhAoipJ2en6YiuodOi/jNEbnlTg38N767\nVbvIbsS84l4w9qwbFDOgWk+DENwD3sQ0CmVlrCQfwUi+pysSsahgqzjApk0PQxx5\naYlSSnnhqt7UsUPyVK26FnbgIAgGBgrghttJ6SDzk7tqh3Xqxy5t9/cN+oSK9/Q=\n=d71K\n-----END PGP SIGNATURE-----\n",
  "verification": {
    "verified": false,
    "reason": "unknown_key",
    "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (GNU/Linux)\n\niQEcBAABAgAGBQJRRw42AAoJEChi0LD6j7VWgFIH/Re6V7CFN6zPLB9nWA/t2dmE\nJpkDta2lfvQ/BzYgbf97uVrb+2IW4b6/imXJz0IReW9Z/U3DoSXbmiNUz7cOWwLA\nXWZHzHbGIqEQr1Ap3cS1+mE1JOg08eMBj/CTQGaAqhJqSFqRT9mrwJjVbm3ekhsZ\neAfXxmUyti5AdZn8MzB/mM9jY+8M4WijhAoipJ2en6YiuodOi/jNEbnlTg38N767\nVbvIbsS84l4w9qwbFDOgWk+DENwD3sQ0CmVlrCQfwUi+pysSsahgqzjApk0PQxx5\naYlSSnnhqt7UsUPyVK26FnbgIAgGBgrghttJ6SDzk7tqh3Xqxy5t9/cN+oSK9/Q=\n=d71K\n-----END PGP SIGNATURE-----\n",
    "payload": "object 0e68e899e5e03ac096fe84fc1986823ce6fc8d34\ntype commit\ntag v2.4\ntagger Cédric VINCENT <cedric.vincent@st.com> 1363611127 +0100\n\nRelease v2.4\n============\n\nNew architectures\n-----------------\n\n* PRoot now works natively on Linux ARM64 systems (a.k.a AArch64).\n  Note that PRoot/AArch64 doesn't support 32-bit binaries yet.\n\n* PRoot/x86_64 now supports x32 binaries/rootfs.\n\nFixes\n-----\n\n* Paths from Unix domain sockets are now translated.  For example, it\n  wasn't possible previously to use \"tmux\" in the guest rootfs if\n  another instance were running in the host rootfs.\n\n* When a host path is bound to a nonexistent guest path, PRoot tries\n  to create this latter in the guest rootfs, for some technical\n  reasons.  Previously, this \"dummy\" guest path was created with RWX\n  permissions but this might cause troubles when re-using the rootfs\n  for other purpose.  Now, this \"dummy\" guest path is created with\n  minimal permissions, and it is also possible to avoid its creation\n  by defining the PROOT_DONT_POLLUTE_ROOTFS environment variable.\n\nCommand-line interface changes\n------------------------------\n\n* The directory \"/run\" is removed from the list of recommended\n  bindings (-B option) because this creates to much conflicts with\n  programs that write in the \"/run/var\" directory.\n\n* The -0 option now makes user's files appear as if they were actually\n  owned by root, and it also fakes the success of any mode changes\n  (chmod* syscalls).  This is typically useful to create packages\n  where the files belong to the root user (it's almost always the\n  case).\n\nInternal changes\n----------------\n\n* PRoot should be even more portable now.  For instance, there's no\n  need to worry about syscallee-saved registers anymore.\n\nThanks\n------\n\nThis release was made possible thanks to, in no special order: Yvan\nRoux, Jerôme Audu, Heehooman, Yann Droneaud, and James Le Cuirot.  See\n\"git log\" for details.\n\nValidation\n----------\n\nAll the packages were built successfully on OBS.  The following tests\nwere ran on Slackware64 14.0 (and \"current-130312\" for x32) with QEMU\n1.4.0.\n\n=====================  ===========  =================  ==================\nGuest distro           Options            Testsuite          Failures\n=====================  ===========  =================  ==================\nSlackware64 14.0                    PRoot-v2.4         OK\nSlackware64 14.0       memcheck     PRoot-v2.4         OK\nSTLinux 2.4 SH4                     smoke tests        OK\nUbuntu 10.10 ARM                    PRoot-v2.4         OK\nOpenEmbedded AArch64                smoke tests        OK\nSlackware64 14.0       -r /         Perl 5.16.1        OK  2/2189  [1]_\nSlackware64 14.0       -k 3.2.29    Perl 5.16.1        OK  2/2189  [1]_\nSlackware 14.0 i486    -B           Perl 5.16.1        OK  3/2188  [2]_\nGentoo 20130130 x32    -B           Perl 5.16.1        OK  3/2188  [2]_\nSlackware 14.0 ARM     -Q qemu-arm  Perl 5.16.1        OK  3/2188  [2]_\nSlackware64 14.0       -r /         CoreUtils 8.19     OK  5/491   [3]_\nSlackware64 14.0       -k 3.2.29    CoreUtils 8.19     OK  5/491   [3]_\nSlackware 14.0 ARM     -Q qemu-arm  CoreUtils 8.19     OK  12/491  [4]_\nSlackware64 14.0       -r /         POSIX tests 1.5.1  OK  same as native\nSlackware 14.0 i486    -B           POSIX tests 1.5.1  OK  same as v2.3.1\nSlackware 14.0 ARM     -Q qemu-arm  POSIX tests 1.5.1  OK  same as v2.3.1\n=====================  ===========  =================  ==================\n\n.. [1] not a regression: cpan/File-Path/t/Path.t,\n       dist/ExtUtils-Command/t/eu_command.t\n\n.. [2] not a regression: op/magic.t + [1]\n\n.. [3] not a regression: install/basic-1, mkdir/p-3, readlink/can-e,\n       readlink/can-f, readlink/can-m\n\n.. [4] not a regression: misc/ls-misc, misc/printenv, split/fail,\n       misc/stty, df/total-unprocessed, dd/skip-seek,\n       dd/skip-seek-past-file, + [3]_\n"
  }
}
