{
  "node_id": "MDM6VGFnNjY1NzMyNDE6Y2VmYjBkZGNhNmNiNjU2NWRiYjVhZTcxZmQzNmVmZDBhOTJhMWUxYQ==",
  "sha": "cefb0ddca6cb6565dbb5ae71fd36efd0a92a1e1a",
  "url": "https://api.github.com/repos/hyperledger/fabric/git/tags/cefb0ddca6cb6565dbb5ae71fd36efd0a92a1e1a",
  "tagger": {
    "name": "David Enyeart",
    "email": "enyeart@us.ibm.com",
    "date": "2018-10-10T17:21:43Z"
  },
  "object": {
    "sha": "ab0a67ad7102f1281736e2c309e9a0ef91b08fd9",
    "type": "commit",
    "url": "https://api.github.com/repos/hyperledger/fabric/git/commits/ab0a67ad7102f1281736e2c309e9a0ef91b08fd9"
  },
  "tag": "v1.3.0",
  "message": "v1.3.0 Release Notes - October 10, 2018\n---------------------------------------\n\nWhat's New in Hyperledger Fabric v1.3\n-------------------------------------\n\nThe following features/epics are included in this release:\n\nFAB-10120 - Identity Mixer for anonymous transactions\nKeep client identities anonymous and unlinkable through the use of\nzero-knowledge proofs.\n\nFAB-8812 - State-based endorsement\nAllows the default chaincode-level endorsement policy to be overridden by a\nper-key endorsement policy.\n\nFAB-2809 - Chaincode pagination of query results\nClients can now page through result sets from chaincode queries, making it\nfeasible to support large result sets with high performance.\n\nFAB-8779 - Java chaincode support\nAs an addition to the current Fabric support for chaincode written in Go and\nNode.js, Java is now supported.\n\nChanges, Known Issues, and Workarounds\n--------------------------------------\n\nFAB-11122 - Removal of event hub\n\nThe 'old' event hub has been removed in Hyperledger Fabric v1.3.  It is\nreplaced by the peer channel-based event service which was introduced in\nFabric v1.1.\nApplications using the old event hub must switch over to the new\nchannel-based event service before upgrading to v1.3 peer or SDKs.\n\nFAB-12088 - Java chaincode support on s390 architecture\n\nJava chaincode support is not yet available on s390 architecture.\n\nFAB-12134 Same chaincode source receiving fingerprint mismatch error\n\nChaincode installed in different ways may result in \"chaincode fingerprint\nmismatch data mismatch\" error upon instantiation.  This may happen when\ninstalling chaincode by using different SDKs. To workaround the problem,\npackage the chaincode prior to installation and instantiation, by using\nthe \"peer chaincode package\" command.\n\nKnown Vulnerabilities\n---------------------\nFAB-8664 - Peer should detect and react when its org has been removed\nThis is a relatively low severity problem, because it requires a significant\nconspiracy of network admins, but it will be addressed in a future release.\n\nResolved Vulnerabilities\n------------------------\nNone.\n\nOther improvements and fixes\n----------------------------\nUpdated to Go version 1.10.4\nUpdated baseimage version to 0.4.13\n\nFor the full list of improvements and fixes, refer to the release change log:\nhttps://github.com/hyperledger/fabric/blob/master/CHANGELOG.md#v130\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
