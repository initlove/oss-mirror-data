{
  "node_id": "MDM6VGFnMTg0OTgxOmRiMjAyNDkyMmQ1Yzk3OWE0NDlmNjNjNDVkZjY4OTVjYTE0NTExOTI=",
  "sha": "db2024922d5c979a449f63c45df6895ca1451192",
  "url": "https://api.github.com/repos/memcached/memcached/git/tags/db2024922d5c979a449f63c45df6895ca1451192",
  "tagger": {
    "name": "Dustin Sallings",
    "email": "dustin@spy.net",
    "date": "2009-04-04T00:07:32Z"
  },
  "object": {
    "sha": "b53bf8b5765230a673581be318e4dda60eb33672",
    "type": "commit",
    "url": "https://api.github.com/repos/memcached/memcached/git/commits/b53bf8b5765230a673581be318e4dda60eb33672"
  },
  "tag": "1.3.3",
  "message": "Release 1.3.3 (a beta)\n\n1 Download\n~~~~~~~~~~~\n\nDownload Link:\n\nhttp://memcached.googlecode.com/files/memcached-1.3.3.tar.gz\n\n2 Features\n~~~~~~~~~~~\n\n2.1 Can set listen backlog on the commandline.\n===============================================\n\nPrevent connection refused during connection storms at the cost of\nkernel memory.\n\n2.2 stats settings\n===================\n\nShow all current server settings (useful for troubleshooting as well\nas internal verification).\n\n3 Bug fixes\n~~~~~~~~~~~~\n- Alignment bug in binary stats (bug26)\n- Occasional buffer overflow in stats (bug27)\n- Try to recycle memory more aggressively. (bug14)\n- incr validation (bug31)\n- 64-bit incr/decr delta fixes (bug21)\n- ascii UDP set (bug36)\n- stats slabs' used chunks (bug29)\n- stats reset should reset item stats, eviction counters, etc... (bug22)\n- Fix all stat buffer management\n\n4 Misc\n~~~~~~~\n- More tests\n- More/better documentation\n- Code cleanup\n\n5 Stable fixes from Dormando\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n5.1 New Stats\n==============\n\n5.1.1 accepting_conns\n----------------------\n\n1 or 0 to indicate whether the server is currently accepting\nconnections or not.\n\nThe server will stop accepting connections when it has as many as it's\nconfigured to take.\n\n5.1.2 listen_disabled_num\n--------------------------\n\nThe number of times socket listeners were disabled due to hitting the\nconnection limit.\n\n5.1.3 cmd_flush\n----------------\n\nThe number of times the flush command was issued.\n\n5.2 missing key debugging\n==========================\n\nWith verbosity enabled, you can see *why* objects were not found.  In\nmany cases, an item exists under a given key, but is considered\ninvalid due to lazy expiration or flush.\n\n5.3 tail repair\n================\n\nThere is a rare, unidentified reference leak that causes a slab to be\nfull of invalid objects that cannot be evicted via the LRU nor will\nthey expire on their own.\n\nTail repair is a strategy by which we forcefully evict objects that\nare marked as ``in-use'' (that is, in-flight or otherwise being used),\nbut haven't been accessed in a long time (currently three hours).\n\nThere is an additional stat that comes along with this (tailrepairs on\na slab) that will allow you to detect that this condition has occurred\non one of your slabs.\n\n5.4 socket listen bugs\n=======================\n\nThere were some issues listening to sockets on machines with different\nnetwork interface configurations (i.e. no network, only ipv4, only\nipv6, etc...).\n\n6 Contributors\n~~~~~~~~~~~~~~~\n\nThe following people contributed to this release since 1.3.2.  Please\nrefer to the 1.3.2 release notes for more info:\n\nhttp://code.google.com/p/memcached/wiki/ReleaseNotes132\n\n    28  Dustin Sallings\n     8  Trond Norbye\n     6  dormando\n     5  Brad Fitzpatrick\n     4  Steve Yen\n     1  Eric Lambert\n     1  Clinton Webb\n     1  Chris Goffinet\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.9 (Darwin)\n\niEYEABECAAYFAknWpPgACgkQeWDnv0PlnVR0FwCdEdmloUzoQaxtFG6xBaiFfZd1\n7DsAniCj46zypeg+8Q7xr8CrCmvvloSd\n=yMx3\n-----END PGP SIGNATURE-----\n",
  "verification": {
    "verified": false,
    "reason": "unverified_email",
    "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.9 (Darwin)\n\niEYEABECAAYFAknWpPgACgkQeWDnv0PlnVR0FwCdEdmloUzoQaxtFG6xBaiFfZd1\n7DsAniCj46zypeg+8Q7xr8CrCmvvloSd\n=yMx3\n-----END PGP SIGNATURE-----\n",
    "payload": "object b53bf8b5765230a673581be318e4dda60eb33672\ntype commit\ntag 1.3.3\ntagger Dustin Sallings <dustin@spy.net> 1238803652 -0700\n\nRelease 1.3.3 (a beta)\n\n1 Download\n~~~~~~~~~~~\n\nDownload Link:\n\nhttp://memcached.googlecode.com/files/memcached-1.3.3.tar.gz\n\n2 Features\n~~~~~~~~~~~\n\n2.1 Can set listen backlog on the commandline.\n===============================================\n\nPrevent connection refused during connection storms at the cost of\nkernel memory.\n\n2.2 stats settings\n===================\n\nShow all current server settings (useful for troubleshooting as well\nas internal verification).\n\n3 Bug fixes\n~~~~~~~~~~~~\n- Alignment bug in binary stats (bug26)\n- Occasional buffer overflow in stats (bug27)\n- Try to recycle memory more aggressively. (bug14)\n- incr validation (bug31)\n- 64-bit incr/decr delta fixes (bug21)\n- ascii UDP set (bug36)\n- stats slabs' used chunks (bug29)\n- stats reset should reset item stats, eviction counters, etc... (bug22)\n- Fix all stat buffer management\n\n4 Misc\n~~~~~~~\n- More tests\n- More/better documentation\n- Code cleanup\n\n5 Stable fixes from Dormando\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n5.1 New Stats\n==============\n\n5.1.1 accepting_conns\n----------------------\n\n1 or 0 to indicate whether the server is currently accepting\nconnections or not.\n\nThe server will stop accepting connections when it has as many as it's\nconfigured to take.\n\n5.1.2 listen_disabled_num\n--------------------------\n\nThe number of times socket listeners were disabled due to hitting the\nconnection limit.\n\n5.1.3 cmd_flush\n----------------\n\nThe number of times the flush command was issued.\n\n5.2 missing key debugging\n==========================\n\nWith verbosity enabled, you can see *why* objects were not found.  In\nmany cases, an item exists under a given key, but is considered\ninvalid due to lazy expiration or flush.\n\n5.3 tail repair\n================\n\nThere is a rare, unidentified reference leak that causes a slab to be\nfull of invalid objects that cannot be evicted via the LRU nor will\nthey expire on their own.\n\nTail repair is a strategy by which we forcefully evict objects that\nare marked as ``in-use'' (that is, in-flight or otherwise being used),\nbut haven't been accessed in a long time (currently three hours).\n\nThere is an additional stat that comes along with this (tailrepairs on\na slab) that will allow you to detect that this condition has occurred\non one of your slabs.\n\n5.4 socket listen bugs\n=======================\n\nThere were some issues listening to sockets on machines with different\nnetwork interface configurations (i.e. no network, only ipv4, only\nipv6, etc...).\n\n6 Contributors\n~~~~~~~~~~~~~~~\n\nThe following people contributed to this release since 1.3.2.  Please\nrefer to the 1.3.2 release notes for more info:\n\nhttp://code.google.com/p/memcached/wiki/ReleaseNotes132\n\n    28  Dustin Sallings\n     8  Trond Norbye\n     6  dormando\n     5  Brad Fitzpatrick\n     4  Steve Yen\n     1  Eric Lambert\n     1  Clinton Webb\n     1  Chris Goffinet\n"
  }
}
