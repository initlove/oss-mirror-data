{
  "node_id": "MDM6VGFnOTA4ODkzOjk0NTViMmZkZWVhZDRlNGEwZWEwNmM5OTlmZmY2N2I1N2QwMDllNDM=",
  "sha": "9455b2fdeead4e4a0ea06c999fff67b57d009e43",
  "url": "https://api.github.com/repos/NodeRedis/node_redis/git/tags/9455b2fdeead4e4a0ea06c999fff67b57d009e43",
  "tagger": {
    "name": "Matt Ranney",
    "email": "mjr@ranney.com",
    "date": "2011-02-17T01:46:50Z"
  },
  "object": {
    "sha": "ee93d1b91b40d84fffddb41ac4712a59cfdf0d4b",
    "type": "commit",
    "url": "https://api.github.com/repos/NodeRedis/node_redis/git/commits/ee93d1b91b40d84fffddb41ac4712a59cfdf0d4b"
  },
  "tag": "v0.5.5",
  "message": "Add probe for server readiness.\n\nWhen a Redis server starts up, it might take a while to load the dataset into memory.\nDuring this time, the server will accept connections, but will return errors for all non-INFO\ncommands.  Now node_redis will send an INFO command whenever it connects to a server.\nIf the info command indicates that the server is not ready, the client will keep trying until\nthe server is ready.  Once it is ready, the client will emit a \"ready\" event as well as the\n\"connect\" event.  The client will queue up all commands sent before the server is ready, just\nlike it did before.  When the server is ready, all offline/non-ready commands will be replayed.\nThis should be backward compatible with previous versions.\n\nTo disable this ready check behavior, set `options.no_ready_check` when creating the client.\n\nAs a side effect of this change, the key/val params from the info command are available as\n`client.server_options`.  Further, the version string is decomposed into individual elements\nin `client.server_options.versions`.\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
