{
  "node_id": "MDM6VGFnMzAxNzQyOjRkNDEyYzlmMzk4ZjNkODA2NmRhY2NjYjE5NjcxYjY0MjczZWFlYmQ=",
  "sha": "4d412c9f398f3d8066dacccb19671b64273eaebd",
  "url": "https://api.github.com/repos/tornadoweb/tornado/git/tags/4d412c9f398f3d8066dacccb19671b64273eaebd",
  "tagger": {
    "name": "Ben Darnell",
    "email": "ben@bendarnell.com",
    "date": "2011-02-09T06:43:17Z"
  },
  "object": {
    "sha": "b91245427fac0672d94f7db26e59ec2bd0c46f57",
    "type": "commit",
    "url": "https://api.github.com/repos/tornadoweb/tornado/git/commits/b91245427fac0672d94f7db26e59ec2bd0c46f57"
  },
  "tag": "v1.1.1",
  "message": "Tornado 1.1.1 is a BACKWARDS-INCOMPATIBLE security update that fixes an\nXSRF vulnerability.  It is available at\nhttp://github.com/downloads/facebook/tornado/tornado-1.1.1.tar.gz\n\nThis is a backwards-incompatible change.  Applications that previously\nrelied on a blanket exception for XMLHTTPRequest may need to be modified\nto explicitly include the XSRF token when making ajax requests.\n\nThe tornado chat demo application demonstrates one way of adding this\ntoken (specifically the function postJSON in demos/chat/static/chat.js).\n\nMore information about this change and its justification can be found at\nhttp://www.djangoproject.com/weblog/2011/feb/08/security/\nhttp://weblog.rubyonrails.org/2011/2/8/csrf-protection-bypass-in-ruby-on-rails\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
