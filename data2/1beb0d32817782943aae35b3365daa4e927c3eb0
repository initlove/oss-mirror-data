{
  "node_id": "MDM6VGFnMTEyMjUwMTQ6MWJlYjBkMzI4MTc3ODI5NDNhYWUzNWIzMzY1ZGFhNGU5MjdjM2ViMA==",
  "sha": "1beb0d32817782943aae35b3365daa4e927c3eb0",
  "url": "https://api.github.com/repos/etcd-io/etcd/git/tags/1beb0d32817782943aae35b3365daa4e927c3eb0",
  "tagger": {
    "name": "Brandon Philips",
    "email": "brandon@ifup.co",
    "date": "2014-10-25T00:26:10Z"
  },
  "object": {
    "sha": "2b9cabcbcd4c6b3e15c3bcec29bd1a323387f970",
    "type": "commit",
    "url": "https://api.github.com/repos/etcd-io/etcd/git/commits/2b9cabcbcd4c6b3e15c3bcec29bd1a323387f970"
  },
  "tag": "v0.5.0-alpha.0",
  "message": "v0.5.0-alpha.0\n\n- etcd now listens on its IANA assigned ports along with its temporary ports (4001/7001) by default\n  - 2379 for client communication\n  - 2380 for peer communication\n\n- Members can listen on and advertise multiple ports. This enables a single\nmember to listen on a public interface and a container bridge at the same time.\n\n- etcd peers proxy requests to the leader so clients no longer need to follow\nHTTP 307 redirects. This means if you can reach a single etcd member you can\nsuccessfully read from/write to the cluster without regard to the network\ntopology.\n\n- An etcd cluster now has a “cluster id” and each member has a unique “member\nid”. etcd will reject requests from members with mismatched cluster ids or\nunknown member ids. This protects the cluster from many common\nmisconfigurations (like the dreaded duplicate ETCD_NAME)\n\n- etcd cluster bootstrap configuration has changed to be fully static. The team\nfound that users attempting to bootstrap a cluster often had trouble\nconfiguring the cluster correctly and using a static configuration makes it\neasier to tell users when something has gone wrong. Full details can be found\nin the clustering documentation:\nhttps://github.com/coreos/etcd/blob/master/Documentation/0.5/clustering.md\n\n- Runtime cluster reconfiguration is done explicitly through an HTTP API\n(/v2/admin/members. Full details can be found in the API documentation:\nhttps://github.com/coreos/etcd/blob/master/Documentation/0.5/admin_api.md\n\n- The Raft implementation (github.com/coreos/etcd/raft) has been re-designed to\nenable faster and more thorough testing. The central raft state machine code is\nsuccinct (>600 LOC) and easy to understand when read alongside the Raft\nwhitepaper.\n\n- The Raft log is now a strict append-only write-ahead log and includes a\nrolling CRC to each of the records in the log.\n\n- The key store starts up completely clean. The internal _etcd/* keys are no\nlonger exposed to the user from the /v2/keys API.\n\n- etcd can operate in a pure proxy mode not participating in Raft consensus and\nalso includes a readonly proxy.\n\n- ETCD_NAME is now advisory only and is not used internally by etcd to identify\na member. This means that it is safe to change the name. Also, the client URL\nlist that each member publishes can be changed from the flags and updated on\nrestart.\n\n- The peers flags has been deprecated, in order to support the ability to\nspecify machines with multiple addresses\n\n- Cluster auto adjustment (also known as standby-mode) has been deprecated.\nThis feature was meant to help people manage their etcd cluster but it was a\ndifficult to understand feature which lead to a lot of support burden. Instead,\nwe have introduced an explicit proxy mode for etcd, and explicit cluster\nconfiguration operations (joining and removing nodes).\n\n- The TOML configuration file has been deprecated. The recommended replacement\nis to use environment variables (e.g. in a systemd unit file).\n\n- Discovery services now must provide a target cluster size. This is due to our\nexperience helping users debug cluster bootstrap with the discovery service. We\nfound that users could become confused when they thought that they had launched\nthree machines (for a fault tolerance of one), but that only two had\nsuccessfully started, and so etcd was accepting writes. Then when the\ninevitable happened and a single machine failed, etcd became unavailable.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJUSu7YAAoJEBVDQyYFQt80OXcP/3wgHIF0GI2P5FeDJaPzzptA\n1sZhGPybMiI+iEJCyREcofb/8wiC6Wca/19f/gzo/QWkELduOHAQi7Syonu+vBVn\ncedHQJD56Qk+oeQj9Y2pLr6F4I7M+UuT0cREUWZVvQ6YCuvYS/kh0+BVTIp9Xm0r\n+Drh98W0LR6NQRLlgWC0Lc6h3IqgF4XAM3O3mntWIucToeuKI223M7hfQPwpfVUY\nQLnqgyoTesGGxQtCMUhZpSc9QbMjOpi5a6f+Am3cP3gcn2ngmyOWZMbG/dLqb9WN\nJnGqFVB9EqNOrrSnzMDpqnyFoDjuwfqkPO6lQrInb8diEd3L5aUy/j+1eSzif4b8\n29qTz0rnMVQcUwJsZfy/SutTZVs4hCzCyQFc8pI5Q0Ck8uNdRGf8ImpmlmKQhfoD\nVRDaSqzEu9qI3eQvFrCAgyLZj5M5GQFYh9yitgFl/VnCpAVkDGjZCYXg2vgkSf2P\npsUj3oIG/rKJP+9/ImHaIPbTo8ZN4SK4VNxlc/m0hinP+fXOs7gJp2dzRBdTyGyo\n0Wti9+GnT0z9mvVi+U8DcwdaBUJII1dHE8odgvb6F9gepoxSNrwNuEFikBPhlgpq\nqsOjwSG4roD3DignydfqJ2mz656e6d9f/GoeiPapaNDFKqZhZVVTffvG2k2xn5nR\nuj0kINXVaw75KyQRII5a\n=4YgC\n-----END PGP SIGNATURE-----\n",
  "verification": {
    "verified": true,
    "reason": "valid",
    "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJUSu7YAAoJEBVDQyYFQt80OXcP/3wgHIF0GI2P5FeDJaPzzptA\n1sZhGPybMiI+iEJCyREcofb/8wiC6Wca/19f/gzo/QWkELduOHAQi7Syonu+vBVn\ncedHQJD56Qk+oeQj9Y2pLr6F4I7M+UuT0cREUWZVvQ6YCuvYS/kh0+BVTIp9Xm0r\n+Drh98W0LR6NQRLlgWC0Lc6h3IqgF4XAM3O3mntWIucToeuKI223M7hfQPwpfVUY\nQLnqgyoTesGGxQtCMUhZpSc9QbMjOpi5a6f+Am3cP3gcn2ngmyOWZMbG/dLqb9WN\nJnGqFVB9EqNOrrSnzMDpqnyFoDjuwfqkPO6lQrInb8diEd3L5aUy/j+1eSzif4b8\n29qTz0rnMVQcUwJsZfy/SutTZVs4hCzCyQFc8pI5Q0Ck8uNdRGf8ImpmlmKQhfoD\nVRDaSqzEu9qI3eQvFrCAgyLZj5M5GQFYh9yitgFl/VnCpAVkDGjZCYXg2vgkSf2P\npsUj3oIG/rKJP+9/ImHaIPbTo8ZN4SK4VNxlc/m0hinP+fXOs7gJp2dzRBdTyGyo\n0Wti9+GnT0z9mvVi+U8DcwdaBUJII1dHE8odgvb6F9gepoxSNrwNuEFikBPhlgpq\nqsOjwSG4roD3DignydfqJ2mz656e6d9f/GoeiPapaNDFKqZhZVVTffvG2k2xn5nR\nuj0kINXVaw75KyQRII5a\n=4YgC\n-----END PGP SIGNATURE-----\n",
    "payload": "object 2b9cabcbcd4c6b3e15c3bcec29bd1a323387f970\ntype commit\ntag v0.5.0-alpha.0\ntagger Brandon Philips <brandon@ifup.co> 1414196770 -0700\n\nv0.5.0-alpha.0\n\n- etcd now listens on its IANA assigned ports along with its temporary ports (4001/7001) by default\n  - 2379 for client communication\n  - 2380 for peer communication\n\n- Members can listen on and advertise multiple ports. This enables a single\nmember to listen on a public interface and a container bridge at the same time.\n\n- etcd peers proxy requests to the leader so clients no longer need to follow\nHTTP 307 redirects. This means if you can reach a single etcd member you can\nsuccessfully read from/write to the cluster without regard to the network\ntopology.\n\n- An etcd cluster now has a “cluster id” and each member has a unique “member\nid”. etcd will reject requests from members with mismatched cluster ids or\nunknown member ids. This protects the cluster from many common\nmisconfigurations (like the dreaded duplicate ETCD_NAME)\n\n- etcd cluster bootstrap configuration has changed to be fully static. The team\nfound that users attempting to bootstrap a cluster often had trouble\nconfiguring the cluster correctly and using a static configuration makes it\neasier to tell users when something has gone wrong. Full details can be found\nin the clustering documentation:\nhttps://github.com/coreos/etcd/blob/master/Documentation/0.5/clustering.md\n\n- Runtime cluster reconfiguration is done explicitly through an HTTP API\n(/v2/admin/members. Full details can be found in the API documentation:\nhttps://github.com/coreos/etcd/blob/master/Documentation/0.5/admin_api.md\n\n- The Raft implementation (github.com/coreos/etcd/raft) has been re-designed to\nenable faster and more thorough testing. The central raft state machine code is\nsuccinct (>600 LOC) and easy to understand when read alongside the Raft\nwhitepaper.\n\n- The Raft log is now a strict append-only write-ahead log and includes a\nrolling CRC to each of the records in the log.\n\n- The key store starts up completely clean. The internal _etcd/* keys are no\nlonger exposed to the user from the /v2/keys API.\n\n- etcd can operate in a pure proxy mode not participating in Raft consensus and\nalso includes a readonly proxy.\n\n- ETCD_NAME is now advisory only and is not used internally by etcd to identify\na member. This means that it is safe to change the name. Also, the client URL\nlist that each member publishes can be changed from the flags and updated on\nrestart.\n\n- The peers flags has been deprecated, in order to support the ability to\nspecify machines with multiple addresses\n\n- Cluster auto adjustment (also known as standby-mode) has been deprecated.\nThis feature was meant to help people manage their etcd cluster but it was a\ndifficult to understand feature which lead to a lot of support burden. Instead,\nwe have introduced an explicit proxy mode for etcd, and explicit cluster\nconfiguration operations (joining and removing nodes).\n\n- The TOML configuration file has been deprecated. The recommended replacement\nis to use environment variables (e.g. in a systemd unit file).\n\n- Discovery services now must provide a target cluster size. This is due to our\nexperience helping users debug cluster bootstrap with the discovery service. We\nfound that users could become confused when they thought that they had launched\nthree machines (for a fault tolerance of one), but that only two had\nsuccessfully started, and so etcd was accepting writes. Then when the\ninevitable happened and a single machine failed, etcd became unavailable.\n"
  }
}
