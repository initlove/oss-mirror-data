{
  "node_id": "MDM6VGFnODkzNTIyOmNjMTZlOTg5ZTM1ZjFmMGJmY2FmYTAxMDA1ZTNlOTc5NzIwNzRmYWU=",
  "sha": "cc16e989e35f1f0bfcafa01005e3e97972074fae",
  "url": "https://api.github.com/repos/serialport/node-serialport/git/tags/cc16e989e35f1f0bfcafa01005e3e97972074fae",
  "tagger": {
    "name": "Francis Gulotta",
    "email": "wizard@roborooter.com",
    "date": "2017-07-30T04:34:41Z"
  },
  "object": {
    "sha": "88b701cc3f9259e0deab39bb3a5c5de24be45bdc",
    "type": "commit",
    "url": "https://api.github.com/repos/serialport/node-serialport/git/commits/88b701cc3f9259e0deab39bb3a5c5de24be45bdc"
  },
  "tag": "5.0.0",
  "message": "Version 5.0.0 ðŸŽ‰\n\nNearly [a year in the making](https://github.com/EmergingTechnologyAdvisors/node-serialport/compare/4.0.7...5.0.0-beta9) Node SerialPort 5.0.0 is a major rewrite that improves stability, compatibility and performance. The api surface is similar to version 4 there have been a number of changes to ensure consistent error handling and operation of a serial port. Notably we are now a [`Stream`](https://nodejs.org/api/stream.html)! We can also introduce a bindings layer. A small low level api to provide access to underlying hardware. External bindings written in other languages or targeting other platforms can now be used.\n\nSome major cpu performance gains on unix platforms can be found and we're less buggy and better performing on Windows too.\n\nWith this release we are now only supporting LTS nodejs platforms and we are dropping NodeJS 0.10, 0.12, 5 and 7 support. We loved directly supporting so many platforms but it was getting in the way making a solid library.\n\nSee our [upgrade guide](./UPGRADE_GUIDE.md) for detail on what to change to upgrade your app to use `serialport@5.0.0`. It's not much!\n\nThank you to the 25 people who committed code and documentation and every person who submitted bug reports and tested changes!\n\nNotable Changes\n- [all] Streams rewrite, node serialport is now a node stream! ðŸŽ‰\n- [all] Drop NodeJS 0.10, 0.12, 5, and 7 support\n- [all] Add node 8 support (we now only support LTS node versions)\n- [all] Introduce a binding layer to provide a common low level interface to work with different platforms.\n- [unix] New read/write subsystem. Write CPU dropped from 100% to 0-2%. @reconbot (Thanks to @indutny for getting me unstuck many times!)\n- [windows] Rewrite reading so it's pausable thanks to @munyirik\n- [docs] An overhaul how we document the api leveraging JSDOC\n- [docs] An overhaul of the format and language in our docs thanks to @LappleApple\n\nFeatures\n- [all] `isOpen` is now a property #899\n- [all] `SerialPort.list` now has more consistent output across all platforms.\n- [all] `SerialPort.list` returns a promise if a callback is not provided thanks to @MikeKovarik for bug fixes\n- [all] A promise aware `serialport-repl` script for debugging and testing.\n- [all] add `#get` to retrieve modem status flags thanks to @jgillick!\n- [all] Add a `MockBinding` object for testing serialports in your project. Used internally too!\n- [all] Add electron precompiled binaries thanks to @Mike-Dax\n- [all] Add regex stream parser and tests @jessicaquynh\n- [all] Allow reopening after an open error #910\n- [all] calls to `.drain` now queue behind port open and in progress writes reported by and with lots of testing help from @tuna-f1sh\n- [all] Change parsers to be transform streams #922\n- [all] Change the default `highWaterMark` to 64k to match `fs.ReadStream`\n- [all] Conform to NodeJS error message formats\n- [all] Exposed mocking serialport via `require('serialport/test')`\n- [all] Have drain wait for pending JS write operations before calling system drain thanks to @digitalhack for reporting it\n- [all] port.path is now read only #898\n- [all] Refactor internals to make use of es6 and promises\n- [all] Remove lowercase options #898\n- [all] Remove the c++ write queue\n- [all] Remove unnecessary dependencies and polyfills thanks to @mscdex\n- [all] Remove v8 deprecation warnings thanks to @indutny again\n- [all] Removed the `disconnect` event. The `close` event now fires with a disconnect error object in the event of a disconnection.\n- [all] SerialPort can now be compressed with `uglify-es` thanks to @rwaldron\n- [all] update bindings to version 1.3.0\n- [all] Upgrade debug and node-pre-gyp\n- [all] Upgrade to non deprecated buffer methods\n- [docs] Add more installation notes on sudo, windows 10, electron and node 7\n- [docs] Add socketio example @jessicaquynh\n- [docs] Electron build docs #965 via @chalkers\n- [docs] Mark new features in 5.0.0 with the fact they started in 5.0.0\n- [docs] Update parser docs to be correct #970 via @jacobq\n- [linux] `SerialPort.list` is now faster and less resource intensive thanks to @akaJes!\n- [linux] Add the `ttyAP` subsystem to serialport list thanks to @fly19890211 for reporting it\n- [osx] `SerialPort.list` now returns the `tty` instead of the `cu` thanks to @kishinmanglani\n- [unix] Flush now gives errors and flushes tx and rx #900\n- [unix] Move setting up the baudrate to the end of the `open()` to better support custom baudrates\n- [windows] Refactoring of `.list` for Windows so it's significantly smaller thanks to @Zensey\n\nFixes\n- [all] Fix baud rate parsing in `serialport-terminal` thanks to @radio-miskovice for reporting it!\n- [all] Fix memory leak during opening a port thanks to @indutny\n- [all] fixed a crash when pausing while reading thanks to @bminer and @baffo32 and others to debug and fix this\n- [all] Upgrade nan to fix compile issues on some platforms thanks to @thom-nic\n- [docs] fixed a typo thanks to @amilajack\n- [docs] Spelling fixes via @Awk34\n- [unix] fix a bug when poller errors would be unhandled thanks to @thiago-sylvain for reporting\n- [windows] Fix file handle leak during opens when errors occur thanks to @enami\n- [windows] Fix flush behavior using PurgeComm fixing #962 via @samisaham\n- [windows] Fix unhandled promise rejection when calling read on Windows\n- [windows] Remove read and write timeouts solving #781 via @giseburt\n\nWe also had help testing, debugging, and designing from; @alaq @arve0 @techninja @noopkat @HipsterBrown and more!\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
