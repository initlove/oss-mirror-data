{
  "node_id": "MDM6VGFnMzAxNzQyOmU2ZjgxMDA2MGNhYWZjZjc5MTgyMTJiMTcwMTc0MGMyN2MzZTQ5NWQ=",
  "sha": "e6f810060caafcf7918212b1701740c27c3e495d",
  "url": "https://api.github.com/repos/tornadoweb/tornado/git/tags/e6f810060caafcf7918212b1701740c27c3e495d",
  "tagger": {
    "name": "Ben Darnell",
    "email": "ben@bendarnell.com",
    "date": "2014-08-12T13:11:30Z"
  },
  "object": {
    "sha": "54bfbee58650a0312b22eb081e8a38d03fcf1a49",
    "type": "commit",
    "url": "https://api.github.com/repos/tornadoweb/tornado/git/commits/54bfbee58650a0312b22eb081e8a38d03fcf1a49"
  },
  "tag": "v4.0.1",
  "message": "What's new in Tornado 4.0.1\n===========================\n\nAug 12, 2014\n------------\n\n* The build will now fall back to pure-python mode if the C extension\n  fails to build for any reason (previously it would fall back for some\n  errors but not others).\n* `.IOLoop.call_at` and `.IOLoop.call_later` now always return\n  a timeout handle for use with `.IOLoop.remove_timeout`.\n* If any callback of a `.PeriodicCallback` or `.IOStream` returns a\n  `.Future`, any error raised in that future will now be logged\n  (similar to the behavior of `.IOLoop.add_callback`).\n* Fixed an exception in client-side websocket connections when the\n  connection is closed.\n* ``simple_httpclient`` once again correctly handles 204 status\n  codes with no content-length header.\n* Fixed a regression in ``simple_httpclient`` that would result in\n  timeouts for certain kinds of errors.\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
