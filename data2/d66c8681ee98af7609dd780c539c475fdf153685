{
  "node_id": "MDM6VGFnMzAxNzQyOmQ2NmM4NjgxZWU5OGFmNzYwOWRkNzgwYzUzOWM0NzVmZGYxNTM2ODU=",
  "sha": "d66c8681ee98af7609dd780c539c475fdf153685",
  "url": "https://api.github.com/repos/tornadoweb/tornado/git/tags/d66c8681ee98af7609dd780c539c475fdf153685",
  "tagger": {
    "name": "Ben Darnell",
    "email": "ben@bendarnell.com",
    "date": "2012-06-01T04:39:50Z"
  },
  "object": {
    "sha": "13598908a7872080c6cc20b0dcfbcb0ce89a3447",
    "type": "commit",
    "url": "https://api.github.com/repos/tornadoweb/tornado/git/commits/13598908a7872080c6cc20b0dcfbcb0ce89a3447"
  },
  "tag": "v2.3.0",
  "message": "What's new in Tornado 2.3\n=========================\n\nMay 31, 2012\n------------\n\nHTTP clients\n~~~~~~~~~~~~\n\n* `tornado.httpclient.HTTPClient` now supports the same constructor\n  keyword arguments as `AsyncHTTPClient`.\n* The ``max_clients`` keyword argument to `AsyncHTTPClient.configure` now works.\n* `tornado.simple_httpclient` now supports the ``OPTIONS`` and ``PATCH``\n  HTTP methods.\n* `tornado.simple_httpclient` is better about closing its sockets\n  instead of leaving them for garbage collection.\n* `tornado.simple_httpclient` correctly verifies SSL certificates for\n  URLs containing IPv6 literals (This bug affected Python 2.5 and 2.6).\n* `tornado.simple_httpclient` no longer includes basic auth credentials\n  in the ``Host`` header when those credentials are extracted from the URL.\n* `tornado.simple_httpclient` no longer modifies the caller-supplied header\n  dictionary, which caused problems when following redirects.\n* `tornado.curl_httpclient` now supports client SSL certificates (using\n  the same ``client_cert`` and ``client_key`` arguments as\n  `tornado.simple_httpclient`)\n\nHTTP Server\n~~~~~~~~~~~\n\n* `HTTPServer` now works correctly with paths starting with ``//``\n* `HTTPHeaders.copy` (inherited from `dict.copy`) now works correctly.\n* `HTTPConnection.address` is now always the socket address, even for non-IP\n  sockets.  `HTTPRequest.remote_ip` is still always an IP-style address\n  (fake data is used for non-IP sockets)\n* Extra data at the end of multipart form bodies is now ignored, which fixes\n  a compatibility problem with an iOS HTTP client library.\n\n``IOLoop`` and ``IOStream``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* `IOStream` now has an ``error`` attribute that can be used to determine\n  why a socket was closed.\n* `tornado.iostream.IOStream.read_until` and ``read_until_regex`` are much\n  faster with large input.\n* `IOStream.write` performs better when given very large strings.\n* `IOLoop.instance()` is now thread-safe.\n\n``tornado.options``\n~~~~~~~~~~~~~~~~~~~\n\n* `tornado.options` options with ``multiple=True`` that are set more than\n  once now overwrite rather than append.  This makes it possible to override\n  values set in `parse_config_file` with `parse_command_line`.\n* `tornado.options` ``--help`` output is now prettier.\n* `tornado.options.options` now supports attribute assignment.\n\n``tornado.template``\n~~~~~~~~~~~~~~~~~~~~\n\n* Template files containing non-ASCII (utf8) characters now work on Python 3\n  regardless of the locale environment variables.\n* Templates now support ``else`` clauses in\n  ``try``/``except``/``finally``/``else`` blocks.\n\n``tornado.web``\n~~~~~~~~~~~~~~~\n\n* `tornado.web.RequestHandler` now supports the ``PATCH`` HTTP method.\n  Note that this means any existing methods named ``patch`` in\n  ``RequestHandler`` subclasses will need to be renamed.\n* `tornado.web.addslash` and ``removeslash`` decorators now send permanent\n  redirects (301) instead of temporary (302).\n* `RequestHandler.flush` now invokes its callback whether there was any data\n  to flush or not.\n* Repeated calls to `RequestHandler.set_cookie` with the same name now\n  overwrite the previous cookie instead of producing additional copies.\n* `tornado.web.OutputTransform.transform_first_chunk` now takes and returns\n  a status code in addition to the headers and chunk.  This is a\n  backwards-incompatible change to an interface that was never technically\n  private, but was not included in the documentation and does not appear\n  to have been used outside Tornado itself.\n* Fixed a bug on python versions before 2.6.5 when `URLSpec` regexes\n  are constructed from unicode strings and keyword arguments are extracted.\n* The ``reverse_url`` function in the template namespace now comes from\n  the `RequestHandler` rather than the `Application`.  (Unless overridden,\n  `RequestHandler.reverse_url` is just an alias for the `Application`\n  method).\n* The ``Etag`` header is now returned on 304 responses to an ``If-None-Match``\n  request, improving compatibility with some caches.\n* `tornado.web` will no longer produce responses with status code 304\n  that also have entity headers such as ``Content-Length``.\n\nOther modules\n~~~~~~~~~~~~~\n\n* `tornado.auth.FacebookGraphMixin` no longer sends ``post_args`` redundantly\n  in the url.\n* The ``extra_params`` argument to `tornado.escape.linkify` may now be\n  a callable, to allow parameters to be chosen separately for each link.\n* `tornado.gen` no longer leaks `StackContexts` when a ``@gen.engine`` wrapped\n  function is called repeatedly.\n* `tornado.locale.get_supported_locales` no longer takes a meaningless\n  ``cls`` argument.\n* `StackContext` instances now have a deactivation callback that can be\n  used to prevent further propagation.\n* `tornado.testing.AsyncTestCase.wait` now resets its timeout on each call.\n* `tornado.wsgi.WSGIApplication` now parses arguments correctly on Python 3.\n* Exception handling on Python 3 has been improved; previously some exceptions\n  such as `UnicodeDecodeError` would generate `TypeErrors`\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
