{
  "node_id": "MDM6VGFnNDU2MjM3OmE3ZTA4ZDM3N2YxOTk4YTQyOTRlM2EyNjA4NGE3NTA0ODRmZGY4MjA=",
  "sha": "a7e08d377f1998a4294e3a26084a750484fdf820",
  "url": "https://api.github.com/repos/scottschiller/SoundManager2/git/tags/a7e08d377f1998a4294e3a26084a750484fdf820",
  "tagger": {
    "name": "Scott Schiller",
    "email": "spam@schillmania.com",
    "date": "2011-09-18T23:44:55Z"
  },
  "object": {
    "sha": "26c566fbc528e994bf125ec89057703b2735d74b",
    "type": "commit",
    "url": "https://api.github.com/repos/scottschiller/SoundManager2/git/commits/26c566fbc528e994bf125ec89057703b2735d74b"
  },
  "tag": "V2.97a.20110918",
  "message": "V2.97a.20110918 - Code clean-up, improved comments and formatting, generated documentation, polling and onbefore- removal, HTML5 stop()/unload() fixes\n\nAdded block comments above major SM2 methods (and Docco-generated documentation), more line breaks for consistent vertical spacing and readability, removal of onbefore-related SMSound options, allowPolling + useFastPolling features. Improved build task optimizing of -nodebug JS build, removing comments, extra line breaks and debug code blocks which were previously only commented out.\n\n    Bug fixes\n        HTML5 unload: Gecko can use url = '' to cancel request etc., others seem to need about:blank or similar empty URL (matching Flash 8.)\n        HTML5 stop(): Don't call unload() here (file under \"durrr.\" This fixes a few state-related bugs.)\n        Fire the onposition callback after setting item.fired, instead of before. This allows looping in the form of mySound.onposition(200, function(){ mySound.setposition(100); });\n        Fix movieStar (MPEG-4) handling for URLs without MIME hints (eg. a URL ending in .php) if type: 'audio/mp4' is passed, for example. (Possible regression introduced with V2.97a.20110801, one report was received.)\n        Fire onposition() after increasing the internal \"onPositionFired\" counter.\n\n    API updates\n\n        Clean-up time! The following soundManager properties have been removed as they're ineffective and/or have modern replacements:\n\n        soundManager.nullURL = 'about:blank'; (internalized; search for 'about:blank' in the source if you want to customize it.)\n\n        soundManager.allowPolling = true; (ignored, always true now. whileloading() / whileplaying() calls rely on it.)\n\n        soundManager.useFastPolling = false; (redundant, now determined by flashPollingInterval now being specified as a number eg., 20, instead of the default of null.)\n\n        The following SMSound (sound options) have been removed, in favour of modern replacements (and also didn't work with HTML5 sounds.)\n\n        soundManager.defaultOptions.onbeforefinish = null;\n        soundManager.defaultOptions.onbeforefinishtime = 5000;\n        soundManager.defaultOptions.onbeforefinishcomplete = null;\n        soundManager.defaultOptions.onjustbeforefinish = null;\n        soundManager.defaultOptions.onjustbeforefinishtime: 200;\n\n        As a replacement, use the SMSound.onposition() method to assign an event callback handler to fire at the relevant time.\n\n        mySound.onposition(10000, function() {\n          console.log('the sound ' + this.sID + ' is now at position ' + this.position);\n        });\n\n        If you need to fire an event relative to the true end of the sound, reference its duration once the sound has fully-loaded - ie., at or after the onload() event - as the duration will not be completely accurate until that time. durationEstimate may be referenced before onload(), but it should not be relied on when \"precise\" timings of say, < 1 second are desired.\n\n        mySound.load({\n          onload: function() {\n            this.onposition(this.duration - 5000, function() {\n              console.log('the sound ' + this.sID + ' is now at position ' + this.position);\n            }\n          }\n        });\n\n        Again, note that due to the interval / polling-based methods of both HTML5 and flash audio, sound status updates and thus precision can vary between 20 msec to perhaps 0.5 seconds and the sound's position property will reflect this delta when the onposition() callback fires.\n\n        Added soundManager.onposition() (forgot to mirror the SMSound method)\n\n        Privatize soundManager.netStreamMimeTypes, etc. soundManager.mimePattern, the resulting one applied to canPlayMIME() etc., is still exposed.\n\n        Simplify getMovie() to use _id(smID) || _doc[smID] || _win[smID] rather than IE / Safari special checks. Sometimes (old?) IE and Safari would return null on getElementById(), but window[id] or document[id] would work. Presumably related to Flash + ExternalInterface wackiness.\n\n    Miscellaneous\n        Reviewed soundmanager2.js code for readability and comments. Added linebreaks, spacing and block-style comments around main functions.\n        Added generated documentation via \"Rocco\" (ruby port of Docco.)\n        Added build.xml notes re: Closure compiler, MTASC and where to find working builds\n        Modified soundmanager-nodebug.js build so comments and debug blocks are removed entirely from the code. Double-spaced linebreaks are also removed.\n        Removed executable permissions from almost all files\n        parseInt() on soundManager.flashVersion, invalidate strings like \"9\"\n        Use 10 / 50 msec polling interval for high performance mode vs. regular mode\n        Page cache/unload/restore (back button case): Only apply window unload event if using flash, since plugin is more likely to break (ie., state won't be recalled correctly.)\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
