{
  "node_id": "MDM6VGFnODc1OTEzMzpjYThlZjE2MzAwMWY1NmM1OWQ3NGExODYyM2U5NDg4NWIzMjhjYjQw",
  "sha": "ca8ef163001f56c59d74a18623e94885b328cb40",
  "url": "https://api.github.com/repos/Netflix/zuul/git/tags/ca8ef163001f56c59d74a18623e94885b328cb40",
  "tagger": {
    "name": "CloudBees DEV@Cloud",
    "email": "nobody@cloudbees.com",
    "date": "2015-07-04T12:16:25Z"
  },
  "object": {
    "sha": "9c2a788af30de03916f41b73ee81be9df0f56f88",
    "type": "commit",
    "url": "https://api.github.com/repos/Netflix/zuul/git/commits/9c2a788af30de03916f41b73ee81be9df0f56f88"
  },
  "tag": "v2.0.0-rc.2",
  "message": "Release of 2.0.0-rc.2\n\n- 9c2a788af30de03916f41b73ee81be9df0f56f88: Removing all the servlet-api hacks as not helping.\n- c8cedead4ce2bbda5fe2b122856c9b5eca33aa2d: Another attempt at fixing the problem with servlet-api:3.0.1 being included and its dependencies then excluded.\n- 5c957039877e9cbfe1e22e12eb151785ed3d9aa8: Back-out of using 'provided' for test dependencies.\n- dcba7e5de3b21bc3abdc5cd209dfecaa89e4a6f6: Switched all the test dependencies to use 'provided'. Setting 'transitive=false' for the servlet-api dependency to try to workaround some oddness with transitive dependencies of servlet-api 3.0.1 being excluded from downstream project.\n- 99f0484f1935f6975a263ebe6a8aea17766e8ada: Force excluding newer javax.servlet-api (3.+) dependency to stop it being included transitively as well as 2.5.\n- 3d46721bb1328aabd1cb3a39c2412661450e0357: Added another Headers.contains() convenience method.\n- 48eb9fbfb8314cc8dbecd2012cfe5f8f7906d6a4: Adding convenience method Cookies.getFirstValue().\n- 4f6e36f90bcb153c583cafbd302c56d00813c54f: Changed the key name of EventProperties in SessionContext back to what is was before, to keep backward compat with existing filters using it.\n- 41aa25e705ba22f229069ed8cfa99bb56ffef612: Removed unused dependency on powermock.\n- 6403e8b3949dd858da8a9a7c0d0a15f95ecb7305: Added OriginManager.createOrigin() with rxnetty and ribbon impls.\n- 9badfe3061bc65661562703a82e645957b4bc8d8: Changed HttpRequestMessage.getInfoForLoggin() to use reconstructURI() instead of just pathAndQuery and Host.\n- 7cbb1d4676a62e26e50f22bb9597e4a7422be4e3: Added Headers.size() method.\n- aca171bb411c159c2ab8fb5648ec665eb8f3cb1c: Added ZuulMessage.setHeaders().\n- a03bd7c7fb59794f658d49f32429661c1e59f76b: Changed interface of SessionContextFactory.create() to return just ZuulMessage instead of Observable<ZuulMessage>. Because we were always just wrapping the return value in Observable.just() anyway, and found a need for caller to have direct access to the message. Improved the error handling in ZuulServlet a bit. And added start/stop of request timer.\n- 08dcc182f18ca2c6abe5a67d23a173924c6ac6e3: Added a SessionContext.getString() convenience method.\n- b25d3f32ed2e2da86f5c746098686445c2e2a314: Added ability to specify classNames to use for filters (\"zuul.filters.classes\"), as well as the directories of groovy files.\n- c5c536f7264dffdb146ee00cd754153b7a3db17d: Fixed unit-test.\n- 62d6e859b35dd0d45300cd44e074748a0dd98695: Made FilterProcessor only apply each filter if that filter's priority is equals to or greater than the priroity set for the context.\n- fc23e113f0a2aeb628b0ceb2172b542abe1eea20: Added FilterPriority as 1st class attribute to SessionContext.\n- 5ff05b69a27813b7d041788f0eab4c9e96df3e94: Added a new FilterPriority enum that filters can be assigned. This is to be used to flag lower priority filters that can be skipped in situations like zuul throttling due to high load.\n- 0a678e911b34d6f04400fd33078e00e87078fb48: Added Headers.setIfAbsent() method.\n- ceb8b7771050d2862a9ad74a3db9b5f4c5233f2d: Added some helper methods to ZuulMessage for setting body as text.\n- 5fe5aa665c65c05f0f4336a40e82586d88228ab9: Added some helper methods for set-cookie handling to HttpResponseMessage.\n- 38de34c8360226ccb09555f1981a2efb6ffd3082: Added methods to HttpRequestMessage for reconstructing the original request URI.\n- d96630816de235f1cedcbe5a2680465593d6ee9c: Added a zuul-specific Cookies class.\n- d0cf482616f3c14e4427694a0b437e48d455f39a: Fixing unit-test.\n- 546ab96c825aae09d2979f27273dcbac70382a39: Moved the sample filters into new directory. So that can remove \"filters\" from the package names for them, as now using FQN.\n- 941ead043cfaa9c6b0d6b35bb08e550e34e684f6: Changed BaseFilter.filterName() to return fully-qualified class name. As sometimes have same class name in different packages. Formalised the \"error-endpoint\" attribute on SessionContext.\n- 6913b10434b3868e00e5d3f0b252e05b182c2ea8: Added statusCode back to ZuulException defaulting to 500. Renamed SessionContext.getThrowable() to getError(). Fixed a couple of incorrect usages of isAssignableFrom.\n- a9f22b643761074d1002f971c90460a842c10f7f: Adding config to tell the jenkins build to use java8.\n- a553221c1b4a8b61b608dde9b6255c53a67c49ae: Added HttpRequestMessage.serverName.\n- ea139791293d6158e1e1f762cf8b715427f97d82: Added a HttpSyncEndpoint base class to remove some boilerplate from static filters.\n- 65aa3ee7929465013ba4b0bb995b1410781c604b: Changed Timing class to be in nanoseconds instead of millis, like edgezuul.\n- 6a426d92576f854f6cec9ac45e610ccaaf83cbc5: Added partial impls of timings of request/response body read/writes.\n- 5fe9c51ae0d2f91110b556af251e042514b5a3ab: Created a new Timings class that encapsulates the per-request Timing instances in SessionContext.\n- cfa38412b1e7889322d79b13d1ae4631c5818565: Fixed some problems with error-handling. - Removed statusCode from ZuulException. - Changed order of args to ZuulException constructors so it's the same as normal Exceptions. - Apply Error endpoints in FilterProcessor more consistently - ie after each phase.\n- c024cfe7f08ca24162317be6a6a50cde8d7338e4: Fixed unit-test.\n- fb25fcf54c686704fcb357f7c26d0aacdbe1718a: Make FilterUsageNotifier injected.\n- ab52ae31f73849d731bcdf8f363be2677403376f: Enable servlet attributes set in ServletFilters to be passed to Zuul filters.\n- ab10cacf13ad98d0ac7ec0a9e5f2ee6acc4ee1fa: Started storing a copy of the original request info before filters are applied. So can use that in metrics and access log.\n- 40c58259c5923cded231baff85445482e76a341a: Added a port attribute to HttpRequestMessage.\n- 234884ef939d3af4ed484a85d4b34948ad10eb9d: Moved some reusable methods into ProxyUtils class.\n- 91d65eca5e4d7fe8748a1a506d3833260765b097: Had forgotten to update the Routing filters to use the new SessionContext.getEndpoint() method.\n- 4a90acb404727646575cabdc6e6b14b7f49f2a3e: Refactored the SessionContext class: - Merged the separate Attributes class into SessionContext. As it wasn't really giving any extra value. - Removed Helpers. Just store them in SessionContext instead now.\n- c54d170fd36ef04e43342a25cc633324fa5057a0: Moved some of the RequestCompleteHandler and RequestMetricsPublisher implementations around a bit.\n- ce39acc39ca4857efce81e44a255d8a4ada83814: Added license header to all files missing it.\n- acff394608f7bbef27cf47cbe2f4063f87d02f01: Merge pull request #125 from Netflix/zuul2-bridge\n- 25ee02bc3257eae931eef190f3d9bfb858e232e0: Started getting ASM exceptions on startup again, so added the hack for asm versions back in just for zuul-netty-sample.\n- fe1387e71942ed4788f2c5fa840ff774ca0683ad: - Renamed the zuul-servlet-api module to zuul-servletapi. - Renamed the zuul-netflix-webapp module to zuul-servletapi-sample.\n- c9100488e0cc9bdd62d93619ac0c3cf586fc1570: - Changed case of the name of ZuulBootstrap class, to fix difference in case between file and class. - RibbonOrigin test fix. - Added rxnetty-spectator dependency back in. - Re-generated dependency lock file.\n- 4abcf4f3d5aab40712c0f02e6b97d01128cd44fd: Merge branch '1.x' into zuul2-bridge\n- 35648ebbb52d2420ef542957eb470e43fc1f4c86: Added a copy of the HTTP2Test class from jetty, and modified to add a test of push promises using the jetty-http2 interfaces directly.\n- 4a0e58d12137072d583324962b5e99d0de54493b: Just initial copy of a sample jetty server. No zuul integration yet.\n- 0afe0bebca2a13043ef5251fae73fee01f7be429: Removed some duplication from gradle files. Un-hardcoded some dependency versions. Added boilerplate for a new zuul-jetty module.\n- f90bfa30f85cb810d0caf9922c70d702ab92cdc7: Added usage of nebula.dependency-lock. And generated a global lock file.\n- 4045b4c80ace8f6f8801f3fe90604a100e67f86b: Fix for another problem in GZip filter tests.\n- 51488a8f6221d648948b24700b497ab5b1d24acd: Made gradle integationTest not run as part of normal build. Needs to be explicitly run.\n- fca347eaf2e8126e00a8a2b29d03340d7909e24f: Fixed remaining problems with Gzip filters after having switched to using ZuulMessage.getBodyStream().\n- 78d6ef992fab8c95684f5b114495a15d9e723de3: Moved the code for buffering message bodies into ZuulMessage. Not fully finished refactoring the GZip filters to use Observable.\n- b73434903c83d9c60511fed4c53997875ee75a71: Pulled out some Http-specific base classes for filters. Just to make the majority of filters a bit less boilerplate.\n- c74ab30e584616151ca63d3e29fbf415a216bc68: Fixing some unit-tests.\n- afc314fd0b1f8ff718d48d086f80420a732ac428: Stop blocking on request body InputStream in RibbonOrigin. Still need to stop buffering the request body, like we do with response body now for servlets.\n- c62c296a08b9c4db026b3cec095a60416fff6063: Got streaming of response inputstreams using Observable<ByteBuf> in zuul-servlet.\n- 72a6f4e0c44ee4b19dd3e4c7abecda121cb6bc0b: Changed the ZuulMessage.body to be an Observable<ByteBuf> again. - Added an in + out filter to buffer request and response bodies for users that want to avoid having to deal with Observable bodies.\n- 142036e47e58af2e0fa28311b844cc4b19040b13: Only run the ExampleIOPreFilter for subset of urls.\n- 281142f01cfd3fe407230ae92e88edfd90944897: Yet more faffing to get integration tests working with both the jetty and netty servers.\n- 0065534602024d057c2a39571696d312ab96adba: Getting both sets of integration tests for zuul-netty-sample and zuul-netflix-webapp to have separate properties.\n- 2b10206bb4bcadc9ff482a3afb00d3722b223da7: Getting a basic smoke-test working from gradle for zuul-netty-sample.\n- db398f5f81a042f53050d0126ec37ccae1872f01: More work on getting some basic integration test automation in place.\n- ad68380e2b9ed8cdf82b5f59d2d8c1e0d0e20651: Refactored the ZuulNFRequest filter implementations into a common superclass in zuul-core (NfProxyEndpoint).\n- 9f4f42331453b99949338fb3e417d779d9ae40ab: Ensuring that the message passed along from a filter failure does not cause ClassCastException when received by filter in next phase.\n- e0cd660635da681ed3a3f90a88a35b73fc74b2c0: More fixes for how the error filters are run.\n- 5fa651c6e73c7ab2d28964d84879855a0d1d24f7: Fixed how error filters were being applied.\n- 78cb62503e9deac63e7daecd139db26224759ed5: All unit-tests back to green.\n- 22ebc994127fd2bcd79546bd9218c8be67bd6709: Updating more of the filters to new interface. Changed name of the HttpResponseMessage.getHttpRequest() method to getRequest().\n- d5c09a1d7f41068f38e98159ad846441dc1e0925: Bugfix for POST requests with a body, but no Content-Type header.\n- 8351e9b8ea271d0407045dbbb1793fbce4762ebc: Mostly finished updating the zuul-netflix-webapp filters to the latest filter interfaces. Still have all the zuul-netty-sample filters to do as well though yet.\n- b114c09f1d3077772ccfac472cd3033a4e470406: Further changes to the Filter and Context interfaces. Merged the separate AsyncFilter and SyncFilter interfaces back into ZuulFilter, as was not working well.\n- 803615ba7e43835e498ad860f34d4abbad1e899e: Merge pull request #122 from mhawthorne/1.x\n- 02aa84eeb98411df6175ea0d929beac99b352b10: only parses params from body for POSTS with form bodies\n- 3c1fe358341ab33f6e482662b63bec8948441401: Various fixes.\n- 1174ae09b8c281791e56a956b48cf1e2b69beb46: Got zuul-netflix-webapp working with the newer RibbonOriginManager classes.\n- 75a3cf2ba20397d8f138bd22aca47b23d84b5e13: Initial start on porting zuul-netflix-webapp to use the Origin/OriginManager interfaces.\n- 75f4d9312fb29b3310aa279261c5ac1edcc5e542: Added and got working an example pre filter that does async IO.\n- c7e1e4b208ae7ea1b493cae393ae862e2273c844: Got the zuul-netty-sample app working now. * Using a basic non-eureka/ribbon LoadBalancer impl. * An example Routing filter that either proxies to api-global.netflix.com, www.yahoo.com, or executes a static response.\n- accb3809928869f08a0de7a19e27d080ca129d52: - Moved some more of the rxnetty-based proxying code from edgezuul-v2. Still a work-in-progress.\n- edbccac721b1ee047cc75cef4856b634d4930e37: - Got zuul-netty-sample app working - but still temporarily using Ribbon instead of rxnetty client.\n- debf2195f0726cc46f4450b3ffd313b516f40d92: Getting the zuul-netty-sample working with latest interfaces. Not quite there yet.\n- 8c9a44df3da8b8ab89363b5189c262871c580721: Got servlet/webapp zuul working using the Observable-based FilterProcessor now. * Using DI for more of the initializtion now.\n- daee51f747ca05e35d9cdf0e4275d7f75a15a976: Refactoring the zuul servlet code to use the same Observable-based FilterProcessor impl as that used for netty.\n- a4da4a65f5f69d16c94d0f230ca46bff79124971: Another fix to unit-test working differently on the jenkins build. The ordering of url parameters is not determinate, so need to avoid testing order of them.\n- 9122e87c6d5fbd0d4e68377c34d0171696d2e365: Fixing a unit-test that fails in the jenkins build. Seems like java.net.URLEncoder encode spaces as '+' on my java8 on mac, but as '%25' on Java7 on linux...\n- c368516a559cfda5042a6e7dd735463b36a32807: More fixes for new interfaces. And fixed the incorrect package naming for the filters.\n- f7538f1128fefc267a3d97fed6713230e16e09e3: - Refactored and fixed the groovy filter unit-tests. - Removed remaining usages of RequestContext and javax.servlet classes.\n- 0df441330cf171cb42dcd1845b054ec65cb84670: - Finished fixing all the unit-tests afer refactoring.\n- fd68976398d102589b9230a097bebf4e2e47ebeb: - Junked the zuul-simple-webapp. Only going to focus on supporting the zuul-netflix-webapp for zuul2.\n- fac89913ff8bae5c8b2af1f3df57655d4f2e980a: - And further refactoring to use the new filter and context interfaces.\n- ba4e99ccb6ccc9fcffaf1f0e67e417ec4c5d90d2: - Further refactoring to use the new filter and context interfaces. Still not complete.\n- d9f11aec11c8913d2d831def94a5df5442912168: Copied the initial new filter and context model interfaces to this branch (from my abandoned fork of zuul2). - Still have a lot more to fix and add.\n- e69427bd453a6405e4e2204fa83259ce4fafa487: - Further refactoring to decouple zuul-core from the servlet api. More to come still.\n- f3525f21a3a3ba36ef898b5e0bcf3add85665bbe: - Started creating new module structure that will support the new 2.x filter interfaces for both tomcat and netty servers.\n- e9a4df5edc3b46d50330142b3364eb19cca94996: - Combined zuul-netflix module into zuul-core. This is a precursor to changing the module structure in preparation for the zuul1-zuul2 bridge layout.\n- 3378b35cbc633061cd05c132062c1c058826b6d1: Merge branch 'truncated-post-fix' into 1.x\n- b3c886acf59cb40b3fdb249691a25bb9426288ce: - Removed unnecessary warn log statement.\n- 09fe03d487a6d68a2cc65812f45a1e5ec464d0ba: Merge pull request #118 from Netflix/truncated-post-fix\n- a05152e5ea90bc893eb03d3c96fa959f16b2538d: Merge branch '1.x' into truncated-post-fix\n- dd38704c3f1a37fd05da674497fae6a2c16c1e6d: - Change HttpServletRequestWrapper to buffer chunked as well as non-chunked request bodies. -- And allow all request buffering to be disabled using a Servlet or ServletFilter init parameter.\n- 64d60884e3e91a99ff6044dcdd0c5faaa2a00aab: Merge pull request #98 from kpacha/uniform_manipulation_of_headers\n- 707fd076a1a924494b05f609c81792a6b16e5129: Merge pull request #63 from timmc/utf8-encode-response\n- dab12e3000cca2ddcf466f299ca2838295a0d5f4: Merge pull request #57 from pmotyka/1.x\n- aac4547ea37131fb68d78107c23caf7a220f12dd: Merge pull request #103 from aandriyc/bugfix/thread_local_leak\n- 6b535799a8fe56e6369b9be40f9027e2ec7e9c4e: Merge pull request #116 from rspieldenner/netflixoss_1.x\n- 851f4b13775537aa3c5c9eb28c6c8241e982d6f3: Merge pull request #114 from manuelcorrea/ssl_support\n- 195d0d6805a65c1c323ebca638d201734ff8f4c3: - Catching SocketTimeoutException when copying request body inputstream and treating as empty body, with a log statement. This is to more gracefully handle the case of truncated post bodies when using tomcat APR connector (which fails differently to BIO connector).\n- 91698a95f7e215ff889ff10c214ceccf06bfd401: Remove unneeded files\n- a764853549facfbcbc8596029f8c23b7fd300586: New nebula.netflixoss build\n- 026e99d7505583ad3a3c85d2ecba7f03a37b40b6: adding ssl scheme\n- a2d6ecf2a6ce9bec9336212437c7d2ec2f632bcd: Fixed thread local leak\n- 92242957040c00ac84e312363cd9f55727d1ec75: Merge pull request #100 from redmar/add-travis-ci-configuration\n- 005ef1bdf7d3b3a295d209679ac67e6447a3eedc: Merge pull request #99 from redmar/add-junit-4.10-dependency\n- 8266783d131fa30fde3f298c7f5046d1f0b34c2f: first attempt at adding a .travis.yml config.\n- 12601f4a979c5c48940e4cce9e0d27f5fc7bc890: add junit dependency in build.gradle\n- 6676593e30f9f2784b37ee7570e21728f9544f3a: force the request headers to be lower-case, just like the ones added by Zuul\n- b0a175d53912400fb1126ddd5c0ff75f8341dc4e: Merge pull request #94 from pataprogramming/1.x\n- cf7ed9d8c2c337e80bdbb094f6e0ae6ef44c4d7a: Fix local httpRequest shadowing httpRequest() method\n- d8a53e8c08bbd558d6c9fc7c397f22387805ee05: UTF-8 encode response body when converting to bytes\n- 0adbea8f1baa8f56caa2dee434327a26f5e1592d: check if query string is null before string concatenation\n",
  "verification": {
    "verified": false,
    "reason": "unsigned",
    "signature": null,
    "payload": null
  }
}
